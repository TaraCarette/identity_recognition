<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.ald.softbankrobotics.com/schema/choregraphe/project.xsd" xar_version="3">
  <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
    <bitmap>media/images/box/root.png</bitmap>
    <script language="4">
      <content>
        <![CDATA[]]>
      </content>
    </script>
    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
    <Input name="PeoplePerception/PeopleDetected" type="0" type_size="1" nature="4" stm_value_name="PeoplePerception/PeopleDetected" inner="1" tooltip="PeoplePerception/PeopleDetected desc" id="4" />
    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
    <Timeline enable="0">
      <BehaviorLayer name="behavior_layer1">
        <BehaviorKeyframe name="keyframe1" index="1">
          <Diagram scale="100">
            <Box name="Face Reco." id="4" localization="8" tooltip="Detect people&apos;s face and recognize those which are known by the robot.&#x0A;&#x0A;Note: the robot needs to learn a face with the Learn Face box before he can recognize it." x="162" y="77">
              <bitmap>media/images/box/interaction/reco_face.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Input name="FaceDetected" type="0" type_size="1" nature="4" stm_value_name="FaceDetected" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="5" />
              <Output name="onRecognizedFaces" type="3" type_size="1" nature="2" inner="0" tooltip="Names of recognized faces. If several faces are recognized, they are sent one&#x0A;after an other on this output." id="6" />
              <Output name="newFace" type="1" type_size="1" nature="2" inner="0" tooltip="Sees a face but realizes it is not in it&apos;s database. " id="7" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Reco. Det. Faces" id="1" localization="8" tooltip="Process face detection extractor data (FaceDetected) to extract the labels of&#x0A;recognized faces and notify when there is a face detected but not recognized.&#x0A;&#x0A;An output (either one or the other) is stimulated each time the number of&#x0A;recognized faces change." x="183" y="68">
                        <bitmap>media/images/box/interaction/reco_face.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.timeFilteredResult = [];

    def onUnload(self):
        #puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(len(p) > 0):
            if(len(p[1]) > 0): # just in case of the ALValue is in the wrong format
                # get the ALValue returned by the time filtered recognition:
                #    - [] when nothing new.
                #    - [4] when a face has been detected but not recognized during the first 8s.
                #    - [2, [faceName]] when one face has been recognized.
                #    - [3, [faceName1, faceName2, ...]] when several faces have been recognized.
                self.timeFilteredResult = p[1][len(p[1]) -1]
                if( len(self.timeFilteredResult) == 1 ):
                    # If a face has been detected for more than 8s but not recognized
                    if(self.timeFilteredResult[0] == 4):
                        self.onDetectWithoutReco()
                elif( len(self.timeFilteredResult) == 2 ):
                    # If one or several faces have been recognized
                    if(self.timeFilteredResult[0] in [2, 3]):
                        for s in self.timeFilteredResult[1]:
                            self.onRecognizedFace( s )

    def onInput_onStop(self):
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input. It must be the&#x0A;FaceDetected extractor data." id="2" />
                        <Output name="onRecognizedFace" type="3" type_size="1" nature="1" inner="0" tooltip="Name of recognized face. If several faces are recognized, they are sent one after an&#x0A;other on this output.&#x0A;&#x0A;Note: if it is the wrong face which has been recognized, you have 7s to rename&#x0A;it with the relearn function available on one of  Add/Del Faces sub-boxes (Learn Face&#x0A;box)." id="3" />
                        <Output name="onDetectWithoutReco" type="1" type_size="1" nature="1" inner="0" tooltip="A face has been detected for more than 8s but has not been recognized. It means&#x0A;that the robot does not know this face but it would be a good idea to learn it." id="4" />
                      </Box>
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="6" outputowner="1" indexofoutput="3" />
                      <Link inputowner="0" indexofinput="7" outputowner="1" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="learnFace" id="6" localization="8" tooltip="This box is empty and should be used to create any box diagram you would like.&#x0A;&#x0A;To edit its diagram, double-click on it." x="581" y="222">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Output name="identity_id" type="3" type_size="1" nature="2" inner="0" tooltip="" id="5" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Learn Face" id="3" localization="8" tooltip="Teach the robot a new face to recognize. the robot&apos;s eyes will become green in case of&#x0A;success and red in case of failure.&#x0A;&#x0A;V1.1.0&#x0A;" x="491" y="35">
                        <bitmap>media/images/box/interaction/learn_face.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onLearn" type="3" type_size="1" nature="2" inner="0" tooltip="Name of the face you want to learn.&#x0A;&#x0A;After entering the name of the face, you have 5s to place in front of the robot&apos;s face.&#x0A;Then the learning process is launched and the robot&apos;s eyes get blue. After some&#x0A;seconds, his eyes should turn green (success) or red (failure).&#x0A;&#x0A;Note: You can learn several times the same face on different days and/or&#x0A;conditions to robustify the recognition process." id="2" />
                        <Output name="onSuccess" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent if the learning succeeded." id="3" />
                        <Output name="onFailure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent if the learning failed." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Learn Face" id="2" localization="8" tooltip="Learn a face to recognize it later.&#x0A;&#x0A;Note: You need to be just in front of the robot&apos;s face to teach him your face." x="624" y="60">
                                  <bitmap>media/images/box/interaction/face.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)


    def onLoad(self):
        try:
            self.faceDetectionModule = self.session().service("ALFaceDetection")
        except Exception as e:
            self.faceDetectionModule = None
            self.logger.error(e)
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onLearn(self, p):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        if( self.faceDetectionModule and self.faceDetectionModule.learnFace( p ) ):
            self.onSuccess()
        else:
            self.onFailure()
        self.bIsRunning = False

    def onInput_onReLearn(self, p):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        if( self.faceDetectionModule and self.faceDetectionModule.reLearnFace( p ) ):
            self.onSuccess()
        else:
            self.onFailure()
        self.bIsRunning = False]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onLearn" type="3" type_size="1" nature="2" inner="0" tooltip="Name of the face you want to learn." id="2" />
                                  <Input name="onReLearn" type="3" type_size="1" nature="2" inner="0" tooltip="Name of the face you want to relearn. Stimulating this input enables to use in a&#x0A;new learning process the latest images where a face has been wrongly&#x0A;recognized." id="3" />
                                  <Output name="onSuccess" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent if the operation succeeded. The face has been learnt." id="4" />
                                  <Output name="onFailure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent if the operation failed. The face has not been learnt." id="5" />
                                </Box>
                                <Box name="WaitToSendMsg" id="8" localization="8" tooltip="Wait for both inputs to be stimulated before sending the message." x="464" y="32">
                                  <bitmap>media/images/box/box-script.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.ok1 = None
        self.ok2 = False

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onMessage(self, p):
        if( not self.ok2 ):
            self.ok1 = p
        else:
            self.ok( p )

    def onInput_onSignal(self):
        if( self.ok1 == None ):
            self.ok2 = True
        else:
            self.ok( self.ok1 )

    def ok(self, p):
        self.ok1 = None
        self.ok2 = False
        self.onStopped( p )]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onMessage" type="0" type_size="1" nature="2" inner="0" tooltip="First signal to wait. This signal contains the message to transmit." id="2" />
                                  <Input name="onSignal" type="1" type_size="1" nature="2" inner="0" tooltip="Second signal to wait." id="3" />
                                  <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Message sent when both inputs are stimulated." id="4" />
                                </Box>
                                <Box name="Only Once" id="9" localization="8" tooltip="This box&apos;s output is stimulated only the first time the onSignal input is." x="71" y="37">
                                  <bitmap>media/images/box/box-script.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bFirstTime = True

    def onUnload(self):
        self.bFirstTime = True

    def onInput_onSignal(self, p):
        if( self.bFirstTime ):
            self.bFirstTime = False
            self.firstTime(p)]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onSignal" type="0" type_size="1" nature="1" inner="0" tooltip="The signal that must pass only once." id="2" />
                                  <Output name="firstTime" type="0" type_size="1" nature="2" inner="0" tooltip="Signal sent first time the onSignal input is stimulated." id="3" />
                                </Box>
                                <Box name="Eyes LEDs" id="5" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes. Note that you must enter the box to enter the color." x="776" y="12">
                                  <bitmap>media/images/box/interaction/LED.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                  <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                                    <Choice value="Both" />
                                    <Choice value="Left" />
                                    <Choice value="Right" />
                                  </Parameter>
                                  <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.fadeOps = []
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        fadeOp = self.leds.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"), _async=True)
        self.fadeOps.append(fadeOp)
        fadeOp.wait()
        self.fadeOps.remove(fadeOp)
        if( self.fadeOps == [] ):
            self.onDone() # activate output of the box]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                                            <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                            <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                                              <Choice value="Both" />
                                              <Choice value="Left" />
                                              <Choice value="Right" />
                                            </Parameter>
                                            <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                                          </Box>
                                          <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([0, 255, 0])]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <color>#00ff00</color>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                                            <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                          </Box>
                                          <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                                          <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Box name="Eyes LEDs" id="6" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes. Note that you must enter the box to enter the color." x="776" y="114">
                                  <bitmap>media/images/box/interaction/LED.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                  <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                                    <Choice value="Both" />
                                    <Choice value="Left" />
                                    <Choice value="Right" />
                                  </Parameter>
                                  <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.fadeOps = []
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        fadeOp = self.leds.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"), _async=True)
        self.fadeOps.append(fadeOp)
        fadeOp.wait()
        self.fadeOps.remove(fadeOp)
        if( self.fadeOps == [] ):
            self.onDone() # activate output of the box]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                                            <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                            <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                                              <Choice value="Both" />
                                              <Choice value="Left" />
                                              <Choice value="Right" />
                                            </Parameter>
                                            <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                                          </Box>
                                          <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([255, 0, 0])]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <color>#ff0000</color>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                                            <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                          </Box>
                                          <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                                          <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Box name="Eyes LEDs" id="1" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes. Note that you must enter the box to enter the color." x="330" y="122">
                                  <bitmap>media/images/box/interaction/LED.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                  <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                                    <Choice value="Both" />
                                    <Choice value="Left" />
                                    <Choice value="Right" />
                                  </Parameter>
                                  <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.fadeOps = []
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        fadeOp = self.leds.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"), _async=True)
        self.fadeOps.append(fadeOp)
        fadeOp.wait()
        self.fadeOps.remove(fadeOp)
        if( self.fadeOps == [] ):
            self.onDone() # activate output of the box]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                                            <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                            <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                                              <Choice value="Both" />
                                              <Choice value="Left" />
                                              <Choice value="Right" />
                                            </Parameter>
                                            <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                                          </Box>
                                          <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([0, 170, 255])]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <color>#00aaff</color>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                                            <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                          </Box>
                                          <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                                          <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Box name="Wait" id="3" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="200" y="95">
                                  <bitmap>media/images/box/wait.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                  <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped." id="4" />
                                  <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                  <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                                </Box>
                                <Link inputowner="2" indexofinput="2" outputowner="8" indexofoutput="4" />
                                <Link inputowner="9" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="8" indexofinput="2" outputowner="9" indexofoutput="3" />
                                <Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="4" />
                                <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="5" />
                                <Link inputowner="0" indexofinput="3" outputowner="5" indexofoutput="3" />
                                <Link inputowner="0" indexofinput="4" outputowner="6" indexofoutput="3" />
                                <Link inputowner="3" indexofinput="2" outputowner="9" indexofoutput="3" />
                                <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" />
                                <Link inputowner="8" indexofinput="3" outputowner="3" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="addIdentity" id="11" localization="8" tooltip="Testing access to our database through choregraphe" x="300" y="33">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import sqlite3

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.conn = None

    # will add new fae with unique id, default to
    def add_new_identity(self):
        cursor = self.conn.cursor()
        cursor.execute("INSERT INTO preferenceTable(user_id, response1, response2, response3, response4, response5, epsilon) VALUES({}, {}, {}, {}, {}, {}, {})".format('NULL', 0, 0, 0, 0, 0, 1))
        self.conn.commit()
        return cursor.lastrowid

    def onLoad(self):
        self.conn = sqlite3.connect('robot_db', check_same_thread=False)

        # If table faces does not yet exist, create a new one
        result = self.conn.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='preferenceTable';").fetchone()
        if not result:
            self.conn.execute("CREATE TABLE preferenceTable (user_id INTEGER PRIMARY KEY NOT NULL, response1 INTEGER, response2 INTEGER, response3 INTEGER, response4 INTEGER, response5 INTEGER, epsilon DECIMAL);")
        self.conn.commit()

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        # add a new name to the database
        id = self.add_new_identity()

        # return that unique id to be learned by the Choregraphe database
        self.uniqueID(id)

        self.onStopped()

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Output name="uniqueID" type="3" type_size="1" nature="2" inner="0" tooltip="ID of learned face to connect with choregraphe database" id="5" />
                      </Box>
                      <Box name="Only Once" id="13" localization="8" tooltip="This box&apos;s output is stimulated only the first time the onSignal input is.&#x0A;&#x0A;Note: It is reset when the diagram containing the box is unloaded." x="136" y="48">
                        <bitmap>media/images/box/loop.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bFirstTime = True

    def onUnload(self):
        self.bFirstTime = True

    def onInput_onSignal(self):
        if( self.bFirstTime ):
            self.bFirstTime = False
            self.firstTime()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onSignal" type="1" type_size="1" nature="1" inner="0" tooltip="The signal that must pass only once." id="2" />
                        <Output name="firstTime" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent first time the onSignal input is stimulated." id="3" />
                      </Box>
                      <Link inputowner="11" indexofinput="2" outputowner="13" indexofoutput="3" />
                      <Link inputowner="3" indexofinput="2" outputowner="11" indexofoutput="5" />
                      <Link inputowner="13" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="5" outputowner="11" indexofoutput="5" />
                      <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="3" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="doResponse" id="3" localization="8" tooltip="This box is empty and should be used to create any box diagram you would like.&#x0A;&#x0A;To edit its diagram, double-click on it." x="847" y="20">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Input name="user_id" type="3" type_size="1" nature="1" inner="0" tooltip="" id="4" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
              <Output name="response" type="2" type_size="1" nature="2" inner="0" tooltip="" id="6" />
              <Output name="userID" type="3" type_size="1" nature="2" inner="0" tooltip="" id="7" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="getResponse" id="11" localization="8" tooltip="Testing access to our database through choregraphe" x="110" y="16">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import sqlite3
#import sys
#sys.path.append("C:/Users/stijn/AppData/Local/Programs/Python/Python39/Lib/site-packages")
import numpy as np

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.conn = None

    # will add new fae with unique id, default to
    def get_response(self, user_id):
        # Get the reward values of all preferences in the table
        response1 = conn.execute("SELECT response1 FROM preferenceTable WHERE user_id={}").format(user_id).fetchone()
        response2 = conn.execute("SELECT response2 FROM preferenceTable WHERE user_id={}").format(user_id).fetchone()
        response3 = conn.execute("SELECT response3 FROM preferenceTable WHERE user_id={}").format(user_id).fetchone()
        response4 = conn.execute("SELECT response4 FROM preferenceTable WHERE user_id={}").format(user_id).fetchone()
        response5 = conn.execute("SELECT response5 FROM preferenceTable WHERE user_id={}").format(user_id).fetchone()
        responses = [response1, response2, response3, response4, response5]

        # Get response with maximum reward and return that as preference
        response = np.argmax(responses)
        return response

    def get_epsilon(self, user_id):
        epsilon = conn.execute("SELECT epsilon FROM preferenceTable WHERE user_id={}").format(user_id).fetchone()
        return epsilon

    def onInput_userId(self, user_id):
        # Retrieve epsilon parameter from database
        epsilon = get_epsilon(self.user_id)

        # Choose exploitation vs exploration
        if random.uniform(0, 1) < epsilon:
            # Explore: choose random response
            response = np.random.randint(0, 5)
        else:
            # Exploit: choose response with known highest reward
            response = self.get_response(self.user_id)

        # Return that preference
        self.response(response)

    def onLoad(self):
        # Connect to database
        self.conn = sqlite3.connect('robot_db', check_same_thread=False)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Input name="userId" type="3" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                        <Output name="response" type="2" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                      </Box>
                      <Box name="Kisses" id="1" localization="8" tooltip="This box is empty and should be used to create any box diagram you would like.&#x0A;&#x0A;To edit its diagram, double-click on it." x="688" y="216">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Kisses (1)" id="73" localization="8" tooltip="ID : #02A 0002&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Kisses" x="282" y="41">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="138">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="21" value="-4.3091" />
                                        <Key frame="41" value="-2.81494" />
                                        <Key frame="63" value="-1.84813" />
                                        <Key frame="90" value="-1.84813" />
                                        <Key frame="108" value="-2.02391" />
                                        <Key frame="138" value="-2.11181" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="21" value="-18.3718" />
                                        <Key frame="41" value="-0.79343" />
                                        <Key frame="63" value="-21.0085" />
                                        <Key frame="90" value="-17" />
                                        <Key frame="108" value="-22.9421" />
                                        <Key frame="138" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="19" value="49.4806" />
                                        <Key frame="39" value="21.0037" />
                                        <Key frame="61" value="10.7204" />
                                        <Key frame="88" value="54.7541" />
                                        <Key frame="106" value="80.067" />
                                        <Key frame="136" value="84.8131" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="19" value="1.75543" />
                                        <Key frame="39" value="1.40386" />
                                        <Key frame="61" value="0.876513" />
                                        <Key frame="88" value="52.3811" />
                                        <Key frame="106" value="33.6601" />
                                        <Key frame="136" value="3.86483" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="19" value="-110.746" />
                                        <Key frame="39" value="-45.9698" />
                                        <Key frame="61" value="-50.2765" />
                                        <Key frame="88" value="-101.517" />
                                        <Key frame="106" value="-109.691" />
                                        <Key frame="136" value="-65.4817" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="19" value="-30.6718" />
                                        <Key frame="39" value="-89.5017" />
                                        <Key frame="61" value="-89.2077" />
                                        <Key frame="88" value="-44.9982" />
                                        <Key frame="106" value="-28.6503" />
                                        <Key frame="136" value="-21.619" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="39" value="-68.4701" />
                                        <Key frame="61" value="-64.427" />
                                        <Key frame="88" value="-88" />
                                        <Key frame="106" value="-64.8665" />
                                        <Key frame="136" value="-8.00055" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="39" value="0.73166" />
                                        <Key frame="61" value="0.702933" />
                                        <Key frame="88" value="0.8" />
                                        <Key frame="106" value="0.676387" />
                                        <Key frame="136" value="0.109844" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="17" value="57.923" />
                                        <Key frame="37" value="23.3816" />
                                        <Key frame="59" value="1.76024" />
                                        <Key frame="86" value="63.3723" />
                                        <Key frame="104" value="80.0718" />
                                        <Key frame="134" value="88.0699" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="17" value="-9.84628" />
                                        <Key frame="37" value="-2.02391" />
                                        <Key frame="59" value="-6.24272" />
                                        <Key frame="86" value="-48.6944" />
                                        <Key frame="104" value="-37.2685" />
                                        <Key frame="134" value="-2.46337" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="17" value="119.496" />
                                        <Key frame="37" value="50.5353" />
                                        <Key frame="59" value="38.8457" />
                                        <Key frame="86" value="111.181" />
                                        <Key frame="104" value="119.442" />
                                        <Key frame="134" value="86.5709" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="17" value="30.2372" />
                                        <Key frame="37" value="89.3004" />
                                        <Key frame="59" value="89.5017" />
                                        <Key frame="86" value="41.0478" />
                                        <Key frame="104" value="23.9968" />
                                        <Key frame="134" value="25.0515" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="37" value="57.4788" />
                                        <Key frame="59" value="56.9514" />
                                        <Key frame="86" value="80" />
                                        <Key frame="104" value="56.8635" />
                                        <Key frame="134" value="0.173379" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="37" value="0.789478" />
                                        <Key frame="59" value="0.758933" />
                                        <Key frame="86" value="0.909091" />
                                        <Key frame="104" value="0.730569" />
                                        <Key frame="134" value="0.22548" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="38" value="-15.5544" />
                                        <Key frame="60" value="-16.7849" />
                                        <Key frame="87" value="-18.9822" />
                                        <Key frame="105" value="-18.9822" />
                                        <Key frame="135" value="-17.9275" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="38" value="6.59428" />
                                        <Key frame="60" value="1.58446" />
                                        <Key frame="87" value="-0.349163" />
                                        <Key frame="105" value="-0.173379" />
                                        <Key frame="135" value="5.45169" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="38" value="20.5691" />
                                        <Key frame="60" value="5.80326" />
                                        <Key frame="87" value="-1.84332" />
                                        <Key frame="105" value="-1.84332" />
                                        <Key frame="135" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="38" value="-5.29104" />
                                        <Key frame="60" value="-5.29104" />
                                        <Key frame="87" value="-5.29104" />
                                        <Key frame="105" value="-5.29104" />
                                        <Key frame="135" value="-5.10012" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="38" value="3.33748" />
                                        <Key frame="60" value="9.40201" />
                                        <Key frame="87" value="14.4997" />
                                        <Key frame="105" value="14.4118" />
                                        <Key frame="135" value="6.76526" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="38" value="-5.09532" />
                                        <Key frame="60" value="-2.28278" />
                                        <Key frame="87" value="-0.876513" />
                                        <Key frame="105" value="-0.876513" />
                                        <Key frame="135" value="-4.91953" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="38" value="-6.15002" />
                                        <Key frame="60" value="-3.1617" />
                                        <Key frame="87" value="0.353971" />
                                        <Key frame="105" value="0.353971" />
                                        <Key frame="135" value="-3.33748" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="38" value="21.2674" />
                                        <Key frame="60" value="5.53477" />
                                        <Key frame="87" value="-1.93602" />
                                        <Key frame="105" value="-2.02391" />
                                        <Key frame="135" value="12.4782" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="38" value="-5.71056" />
                                        <Key frame="60" value="-5.88634" />
                                        <Key frame="87" value="-5.90622" />
                                        <Key frame="105" value="-5.88634" />
                                        <Key frame="135" value="-4.39218" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="38" value="2.72705" />
                                        <Key frame="60" value="9.40682" />
                                        <Key frame="87" value="14.4166" />
                                        <Key frame="105" value="14.5924" />
                                        <Key frame="135" value="6.15482" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="38" value="4.13332" />
                                        <Key frame="60" value="3.07861" />
                                        <Key frame="87" value="0.617646" />
                                        <Key frame="105" value="0.705538" />
                                        <Key frame="135" value="2.81494" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Link inputowner="73" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="73" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="Salute" id="2" localization="8" tooltip="This box is empty and should be used to create any box diagram you would like.&#x0A;&#x0A;To edit its diagram, double-click on it." x="688" y="336">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="ShowFarDistanceLeft_01" id="11" localization="8" tooltip="ID : #01A 0015&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- There&#x0A;- Future&#x0A;- Left&#x0A;- Far&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : No&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : LeanRight&#x0A;End stance : LeanRight" x="301" y="35">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49">
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="20" value="16.697" />
                                        <Key frame="40" value="-7.91266" />
                                        <Key frame="48" value="-5.10013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                        <Key frame="20" value="19.2459" />
                                        <Key frame="40" value="17.6638" />
                                        <Key frame="48" value="17.8396" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                                        <Key frame="19" value="-10.2857" />
                                        <Key frame="38" value="-0.441859" />
                                        <Key frame="46" value="-0.969218" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                                        <Key frame="19" value="-6.58948" />
                                        <Key frame="38" value="-0.612832" />
                                        <Key frame="46" value="-1.0523" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="22" value="-88.5" />
                                        <Key frame="41" value="-24.1678" />
                                        <Key frame="49" value="-34.4511" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="22" value="-59.4172" />
                                        <Key frame="41" value="-102.484" />
                                        <Key frame="49" value="-96.5954" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="22" value="0" />
                                        <Key frame="41" value="0.84" />
                                        <Key frame="49" value="0.68" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                                        <Key frame="19" value="-17.5759" />
                                        <Key frame="38" value="22.3269" />
                                        <Key frame="46" value="15.0319" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                                        <Key frame="19" value="2.81494" />
                                        <Key frame="38" value="-2.45857" />
                                        <Key frame="46" value="-2.63435" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                                        <Key frame="19" value="-15.6423" />
                                        <Key frame="38" value="-14.1482" />
                                        <Key frame="46" value="-13.7966" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                                        <Key frame="19" value="35.5059" />
                                        <Key frame="38" value="-3.95753" />
                                        <Key frame="46" value="2.1949" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="22" value="-10.2857" />
                                        <Key frame="41" value="20.6522" />
                                        <Key frame="49" value="18.7185" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="22" value="20.6522" />
                                        <Key frame="41" value="35.6816" />
                                        <Key frame="49" value="33.5722" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="22" value="-0.529749" />
                                        <Key frame="41" value="-32.0829" />
                                        <Key frame="49" value="-28.743" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                                        <Key frame="19" value="-19.949" />
                                        <Key frame="38" value="-3.68905" />
                                        <Key frame="46" value="-4.74374" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                                        <Key frame="19" value="6.41851" />
                                        <Key frame="38" value="14.5924" />
                                        <Key frame="46" value="14.2409" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="18" value="84.9058" />
                                        <Key frame="39" value="62.054" />
                                        <Key frame="47" value="64.2513" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="18" value="59.5882" />
                                        <Key frame="39" value="61.6097" />
                                        <Key frame="47" value="60.2913" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="18" value="0" />
                                        <Key frame="39" value="0.84" />
                                        <Key frame="47" value="0.68" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                                        <Key frame="19" value="-21.3601" />
                                        <Key frame="38" value="23.8163" />
                                        <Key frame="46" value="16.2576" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                                        <Key frame="19" value="-9.05044" />
                                        <Key frame="38" value="-20.4764" />
                                        <Key frame="46" value="-18.8943" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                                        <Key frame="19" value="-15.6423" />
                                        <Key frame="38" value="-14.1482" />
                                        <Key frame="46" value="-13.7966" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                                        <Key frame="19" value="46.2335" />
                                        <Key frame="38" value="-3.24959" />
                                        <Key frame="46" value="4.04543" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="18" value="85.0816" />
                                        <Key frame="39" value="83.6753" />
                                        <Key frame="47" value="87.191" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="18" value="3.68905" />
                                        <Key frame="39" value="9.92936" />
                                        <Key frame="47" value="8.17153" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="18" value="26.6288" />
                                        <Key frame="39" value="25.0467" />
                                        <Key frame="47" value="25.7499" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="11" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="Happy" id="3" localization="8" tooltip="This box is empty and should be used to create any box diagram you would like.&#x0A;&#x0A;To edit its diagram, double-click on it." x="691" y="463">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Happy" id="12" localization="8" tooltip="ID : #02A 0001&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Happy" x="287" y="16">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="87">
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="-15" />
                                        <Key frame="23" value="-8.48092" />
                                        <Key frame="27" value="-12.3871" />
                                        <Key frame="31" value="-10.217" />
                                        <Key frame="36" value="-15" />
                                        <Key frame="40" value="-8.26391" />
                                        <Key frame="44" value="-12.1701" />
                                        <Key frame="48" value="-10" />
                                        <Key frame="54" value="-15" />
                                        <Key frame="58" value="-8.26391" />
                                        <Key frame="62" value="-12.1701" />
                                        <Key frame="66" value="-10" />
                                        <Key frame="71" value="-15" />
                                        <Key frame="75" value="-10.676" />
                                        <Key frame="87" value="-11.5137" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="15" value="-0.615236" />
                                        <Key frame="24" value="2" />
                                        <Key frame="40" value="-2" />
                                        <Key frame="58" value="2" />
                                        <Key frame="74" value="-2" />
                                        <Key frame="87" value="-0.175782" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HipPitch" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="-10.1" />
                                        <Key frame="84" value="-2.02149" />
                                        <Key frame="87" value="-1.84571" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HipRoll" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="5" />
                                        <Key frame="36" value="-5" />
                                        <Key frame="54" value="5" />
                                        <Key frame="71" value="-5" />
                                        <Key frame="84" value="-0.0878909" />
                                        <Key frame="87" value="0.175782" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="KneePitch" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="3.5" />
                                        <Key frame="84" value="-0.175782" />
                                        <Key frame="87" value="0.351564" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="-53" />
                                        <Key frame="28" value="-38.4" />
                                        <Key frame="36" value="-61.1" />
                                        <Key frame="45" value="-38.4" />
                                        <Key frame="54" value="-53" />
                                        <Key frame="63" value="-38.4" />
                                        <Key frame="71" value="-61.1" />
                                        <Key frame="79" value="-38.4" />
                                        <Key frame="87" value="-29.9707" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="-63.5" />
                                        <Key frame="36" value="-100.538" />
                                        <Key frame="54" value="-63.5" />
                                        <Key frame="71" value="-100.538" />
                                        <Key frame="87" value="-70.4883" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" alwaysVisible="1" unit="1">
                                        <Key frame="20" value="0.020089" />
                                        <Key frame="28" value="0.34" />
                                        <Key frame="36" value="0.173538" />
                                        <Key frame="45" value="0.34" />
                                        <Key frame="54" value="0.020089" />
                                        <Key frame="63" value="0.34" />
                                        <Key frame="71" value="0.173538" />
                                        <Key frame="79" value="0.34" />
                                        <Key frame="87" value="0.582601" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="75.4" />
                                        <Key frame="36" value="101.5" />
                                        <Key frame="54" value="75.4" />
                                        <Key frame="71" value="101.5" />
                                        <Key frame="87" value="89.3848" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="14.8" />
                                        <Key frame="36" value="14.4" />
                                        <Key frame="54" value="14.8" />
                                        <Key frame="71" value="14.4" />
                                        <Key frame="87" value="8.17382" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="-6.39955" />
                                        <Key frame="36" value="0.723418" />
                                        <Key frame="54" value="-6.39955" />
                                        <Key frame="71" value="0.723418" />
                                        <Key frame="87" value="0.876518" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="61.1" />
                                        <Key frame="28" value="39.8" />
                                        <Key frame="36" value="53" />
                                        <Key frame="45" value="39.8" />
                                        <Key frame="54" value="61.1" />
                                        <Key frame="63" value="39.8" />
                                        <Key frame="71" value="53" />
                                        <Key frame="79" value="39.8" />
                                        <Key frame="87" value="29.9707" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="100.538" />
                                        <Key frame="36" value="63.5" />
                                        <Key frame="54" value="100.538" />
                                        <Key frame="71" value="63.5" />
                                        <Key frame="87" value="70.1367" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" alwaysVisible="1" unit="1">
                                        <Key frame="20" value="0.173538" />
                                        <Key frame="28" value="0.29" />
                                        <Key frame="36" value="0.020089" />
                                        <Key frame="45" value="0.29" />
                                        <Key frame="54" value="0.173538" />
                                        <Key frame="63" value="0.29" />
                                        <Key frame="71" value="0.020089" />
                                        <Key frame="79" value="0.29" />
                                        <Key frame="87" value="0.585237" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="101.5" />
                                        <Key frame="36" value="75.4" />
                                        <Key frame="54" value="101.5" />
                                        <Key frame="71" value="75.4" />
                                        <Key frame="87" value="89.1211" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="-14.4" />
                                        <Key frame="36" value="-14.8" />
                                        <Key frame="54" value="-14.4" />
                                        <Key frame="71" value="-14.8" />
                                        <Key frame="87" value="-8.34961" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="-0.723418" />
                                        <Key frame="36" value="6.39955" />
                                        <Key frame="54" value="-0.723418" />
                                        <Key frame="71" value="6.39955" />
                                        <Key frame="87" value="0.788627" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Link inputowner="12" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="12" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="Nod" id="4" localization="8" tooltip="This box is empty and should be used to create any box diagram you would like.&#x0A;&#x0A;To edit its diagram, double-click on it." x="689" y="587">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="SlowBowWithArms_01" id="42" localization="8" tooltip="ID : #01C 0026&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Go&#x0A;- Affirmative&#x0A;- Can&#x0A;- Indicate&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : Yes&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : Center" x="239" y="37">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="51">
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="15" value="-11.4275" />
                                        <Key frame="24" value="-14.3096" />
                                        <Key frame="29" value="2.2" />
                                        <Key frame="37" value="-13.4" />
                                        <Key frame="42" value="-2.1" />
                                        <Key frame="49" value="-7.39858" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                                        <Key frame="13" value="4.39427" />
                                        <Key frame="22" value="5.2615" />
                                        <Key frame="27" value="5.83927" />
                                        <Key frame="35" value="5.83927" />
                                        <Key frame="40" value="5.83927" />
                                        <Key frame="47" value="5.24849" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                                        <Key frame="13" value="-4.26134" />
                                        <Key frame="22" value="-5.15548" />
                                        <Key frame="27" value="-5.73068" />
                                        <Key frame="35" value="-6.35319" />
                                        <Key frame="40" value="-6.35319" />
                                        <Key frame="47" value="-6.35319" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="17" value="-88.3224" />
                                        <Key frame="26" value="-88.3224" />
                                        <Key frame="31" value="-88.3224" />
                                        <Key frame="39" value="-82.721" />
                                        <Key frame="44" value="-73.9596" />
                                        <Key frame="51" value="-65.862" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="17" value="-68.1519" />
                                        <Key frame="26" value="-57.8875" />
                                        <Key frame="31" value="-55.3138" />
                                        <Key frame="39" value="-59.9818" />
                                        <Key frame="44" value="-59.9818" />
                                        <Key frame="51" value="-59.9818" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="17" value="0.865834" />
                                        <Key frame="26" value="0.854073" />
                                        <Key frame="31" value="0.843551" />
                                        <Key frame="39" value="0.8" />
                                        <Key frame="44" value="0.592788" />
                                        <Key frame="51" value="0.376586" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                                        <Key frame="13" value="7.57681" />
                                        <Key frame="22" value="2.42793" />
                                        <Key frame="27" value="-0.236286" />
                                        <Key frame="35" value="-2.28279" />
                                        <Key frame="40" value="1.9805" />
                                        <Key frame="47" value="7.5858" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                                        <Key frame="13" value="1.79606" />
                                        <Key frame="22" value="2.56746" />
                                        <Key frame="27" value="2.56746" />
                                        <Key frame="35" value="3.18885" />
                                        <Key frame="40" value="4.03031" />
                                        <Key frame="47" value="4.80285" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                                        <Key frame="13" value="-9.8646" />
                                        <Key frame="22" value="-9.8646" />
                                        <Key frame="27" value="-10.4376" />
                                        <Key frame="35" value="-11.0883" />
                                        <Key frame="40" value="-11.0883" />
                                        <Key frame="47" value="-10.3535" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                                        <Key frame="13" value="-4.74636" />
                                        <Key frame="22" value="-4.74636" />
                                        <Key frame="27" value="-4.74636" />
                                        <Key frame="35" value="-4.74636" />
                                        <Key frame="40" value="-4.74636" />
                                        <Key frame="47" value="-4.74636" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="17" value="79.8052" />
                                        <Key frame="26" value="70.8914" />
                                        <Key frame="31" value="69.3222" />
                                        <Key frame="39" value="72.1598" />
                                        <Key frame="44" value="72.7714" />
                                        <Key frame="51" value="74.0205" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="17" value="7.36612" />
                                        <Key frame="26" value="6.06407" />
                                        <Key frame="31" value="5.26006" />
                                        <Key frame="39" value="2.60293" />
                                        <Key frame="44" value="7.72673" />
                                        <Key frame="51" value="12.163" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="17" value="-21.016" />
                                        <Key frame="26" value="-43.9666" />
                                        <Key frame="31" value="-54.9769" />
                                        <Key frame="39" value="-64.7665" />
                                        <Key frame="44" value="-39.1675" />
                                        <Key frame="51" value="-5.66774" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                                        <Key frame="13" value="4.8023" />
                                        <Key frame="22" value="5.59974" />
                                        <Key frame="27" value="6.28749" />
                                        <Key frame="35" value="6.28749" />
                                        <Key frame="40" value="5.63887" />
                                        <Key frame="47" value="4.91933" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                                        <Key frame="13" value="9.00774" />
                                        <Key frame="22" value="7.48585" />
                                        <Key frame="27" value="6.81659" />
                                        <Key frame="35" value="6.81659" />
                                        <Key frame="40" value="6.81659" />
                                        <Key frame="47" value="6.81659" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="15" value="86.1549" />
                                        <Key frame="24" value="87.7583" />
                                        <Key frame="29" value="87.7583" />
                                        <Key frame="37" value="64.9846" />
                                        <Key frame="42" value="60.2937" />
                                        <Key frame="49" value="58.6416" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="15" value="68.2695" />
                                        <Key frame="24" value="57.0892" />
                                        <Key frame="29" value="55.0117" />
                                        <Key frame="37" value="58.8014" />
                                        <Key frame="42" value="59.628" />
                                        <Key frame="49" value="60.2413" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="15" value="0.618988" />
                                        <Key frame="24" value="0.456782" />
                                        <Key frame="29" value="0.367645" />
                                        <Key frame="37" value="0.304126" />
                                        <Key frame="42" value="0.304126" />
                                        <Key frame="49" value="0.304126" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                                        <Key frame="13" value="6.81969" />
                                        <Key frame="22" value="2.52902" />
                                        <Key frame="27" value="0.345477" />
                                        <Key frame="35" value="-1.16591" />
                                        <Key frame="40" value="2.57098" />
                                        <Key frame="47" value="7.48417" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                                        <Key frame="13" value="-8.72964" />
                                        <Key frame="22" value="-6.30757" />
                                        <Key frame="27" value="-5.50677" />
                                        <Key frame="35" value="-4.82732" />
                                        <Key frame="40" value="-4.82732" />
                                        <Key frame="47" value="-4.82732" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                                        <Key frame="13" value="-9.8646" />
                                        <Key frame="22" value="-9.8646" />
                                        <Key frame="27" value="-10.4376" />
                                        <Key frame="35" value="-11.0883" />
                                        <Key frame="40" value="-11.0883" />
                                        <Key frame="47" value="-10.3535" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                                        <Key frame="13" value="-4.52137" />
                                        <Key frame="22" value="-4.52137" />
                                        <Key frame="27" value="-4.52137" />
                                        <Key frame="35" value="-4.52137" />
                                        <Key frame="40" value="-4.52137" />
                                        <Key frame="47" value="-4.52137" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="15" value="72.7806" />
                                        <Key frame="24" value="70.0927" />
                                        <Key frame="29" value="69.5119" />
                                        <Key frame="37" value="74.1141" />
                                        <Key frame="42" value="77.0457" />
                                        <Key frame="49" value="79.665" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="15" value="-8.72776" />
                                        <Key frame="24" value="-10.8365" />
                                        <Key frame="29" value="-11.6998" />
                                        <Key frame="37" value="-11.6998" />
                                        <Key frame="42" value="-12.3151" />
                                        <Key frame="49" value="-12.3151" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="15" value="-21.8077" />
                                        <Key frame="24" value="20.7802" />
                                        <Key frame="29" value="42.9035" />
                                        <Key frame="37" value="64.4107" />
                                        <Key frame="42" value="39.9616" />
                                        <Key frame="49" value="6.68441" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Link inputowner="42" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="42" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="Wave" id="5" localization="8" tooltip="This box is empty and should be used to create any box diagram you would like.&#x0A;&#x0A;To edit its diagram, double-click on it." x="693" y="706">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Wave" id="1" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="362" y="57">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="120" size="120">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                    <ActuatorList model="Nao">
                                      <ActuatorCurve name="" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="15" value="-58.4" />
                                        <Key frame="30" value="-58.4" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="30" value="55.3" />
                                        <Key frame="45" value="11.3" />
                                        <Key frame="60" value="53.3" />
                                        <Key frame="75" value="11.3" />
                                        <Key frame="90" value="53.3" />
                                        <Key frame="105" value="11.3" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="Switch Case" id="6" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="317" y="90">
                        <bitmap>media/images/box/interaction/choice.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                          </content>
                        </script>
                        <pluginContent>
                          <keywords>
                            <keyword>0</keyword>
                            <keyword>1</keyword>
                            <keyword>2</keyword>
                            <keyword>3</keyword>
                            <keyword>4</keyword>
                            <keyword></keyword>
                          </keywords>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" />
                        <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                        <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                        <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                        <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                        <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                        <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
                      </Box>
                      <Box name="Thinking" id="14" localization="8" tooltip="ID : #02B 0001&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Thinking" x="688" y="94">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="140">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="19" value="-6.5" />
                              <Key frame="31" value="12.8913" />
                              <Key frame="80" value="11.5" />
                              <Key frame="119" value="13.8" />
                              <Key frame="131" value="7.2" />
                              <Key frame="140" value="-11.9668" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="31" value="8.87482" />
                              <Key frame="119" value="9.00008" />
                              <Key frame="140" value="-17.4791" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0">
                              <Key frame="15" value="-2.34809" />
                              <Key frame="31" value="-12.3926" />
                              <Key frame="105" value="-19.9512" />
                              <Key frame="128" value="-2.48279" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0">
                              <Key frame="15" value="0" />
                              <Key frame="31" value="-3.25195" />
                              <Key frame="105" value="-2.02149" />
                              <Key frame="128" value="-0.197286" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0">
                              <Key frame="15" value="-0.634643" />
                              <Key frame="31" value="1.66993" />
                              <Key frame="105" value="4.30664" />
                              <Key frame="128" value="-0.742038" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="17" value="-45.8" />
                              <Key frame="29" value="-85.0768" />
                              <Key frame="117" value="-86.9" />
                              <Key frame="129" value="-87.9" />
                              <Key frame="138" value="-78.9185" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="17" value="-80.4" />
                              <Key frame="29" value="-54.7589" />
                              <Key frame="117" value="-52.1" />
                              <Key frame="138" value="-88.7261" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="17" value="0.96" />
                              <Key frame="29" value="0.7036" />
                              <Key frame="43" value="0.44" />
                              <Key frame="53" value="0.73" />
                              <Key frame="68" value="0.44" />
                              <Key frame="78" value="0.73" />
                              <Key frame="95" value="0.44" />
                              <Key frame="105" value="0.73" />
                              <Key frame="117" value="0.65" />
                              <Key frame="129" value="0.52" />
                              <Key frame="138" value="0.844074" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="29" value="-29.3582" />
                              <Key frame="117" value="-33.3" />
                              <Key frame="129" value="5.7" />
                              <Key frame="138" value="25.2371" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="29" value="18.8064" />
                              <Key frame="117" value="19.6" />
                              <Key frame="138" value="13.4" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="17" value="-51.3" />
                              <Key frame="29" value="-47.7276" />
                              <Key frame="117" value="-49.4001" />
                              <Key frame="138" value="1.10055" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="15" value="32.9" />
                              <Key frame="27" value="21.8875" />
                              <Key frame="115" value="11.6895" />
                              <Key frame="127" value="21.5" />
                              <Key frame="136" value="14.8333" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="15" value="84.7" />
                              <Key frame="27" value="70.7504" />
                              <Key frame="115" value="70.8398" />
                              <Key frame="136" value="69.9984" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="15" value="0.54" />
                              <Key frame="27" value="0.3504" />
                              <Key frame="115" value="0.510545" />
                              <Key frame="127" value="0.31" />
                              <Key frame="136" value="0.412984" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="27" value="88.6852" />
                              <Key frame="115" value="78.3984" />
                              <Key frame="136" value="82.2228" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="27" value="-6.24271" />
                              <Key frame="115" value="-4.92188" />
                              <Key frame="136" value="-6.87545" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="15" value="28.5" />
                              <Key frame="27" value="1.75543" />
                              <Key frame="115" value="5.35899" />
                              <Key frame="136" value="-1.90004" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                        <Resource name="Standing" type="Lock" timeout="1" />
                        <Resource name="All motors" type="Lock" timeout="1" />
                      </Box>
                      <Link inputowner="11" indexofinput="4" outputowner="0" indexofoutput="4" />
                      <Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="6" indexofinput="2" outputowner="11" indexofoutput="6" />
                      <Link inputowner="5" indexofinput="2" outputowner="6" indexofoutput="8" />
                      <Link inputowner="4" indexofinput="2" outputowner="6" indexofoutput="7" />
                      <Link inputowner="3" indexofinput="2" outputowner="6" indexofoutput="6" />
                      <Link inputowner="2" indexofinput="2" outputowner="6" indexofoutput="5" />
                      <Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="5" outputowner="3" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="5" outputowner="4" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="5" outputowner="5" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="6" outputowner="11" indexofoutput="6" />
                      <Link inputowner="0" indexofinput="7" outputowner="0" indexofoutput="4" />
                      <Link inputowner="14" indexofinput="2" outputowner="6" indexofoutput="3" />
                      <Link inputowner="0" indexofinput="5" outputowner="14" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="negativeFeedback" id="14" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="937" y="602">
              <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(0)]]>
                </content>
              </script>
              <pluginContent>
                <number>0</number>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the number on the output." id="2" />
              <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
            </Box>
            <Box name="positiveFeedback" id="13" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="937" y="529">
              <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(1)]]>
                </content>
              </script>
              <pluginContent>
                <number>1</number>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the number on the output." id="2" />
              <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
            </Box>
            <Box name="Wait For Signals" id="1" localization="8" tooltip="Wait for both inputs to be stimulated before stimulating its output." x="1258" y="15">
              <bitmap>media/images/box/wait.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.ok = [False]*2

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onStart(self, nInput):
        self.ok[nInput-1] = True
        bOutput = True
        for bOk in self.ok:
            bOutput = bOutput and bOk
        if( bOutput ):
            self.ok = [False]*2
            self.signalsReceived()

    def onInput_signal1(self):
        self.onStart(1)

    def onInput_signal2(self):
        self.onStart(2)]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="signal1" type="1" type_size="1" nature="1" inner="0" tooltip="First signal to wait." id="2" />
              <Input name="signal2" type="1" type_size="1" nature="1" inner="0" tooltip="Second signal to wait." id="3" />
              <Output name="signalsReceived" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when both inputs have been stimulated." id="4" />
            </Box>
            <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="437" y="238">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="Text Edit" id="5" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="171" y="264">
              <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Hey! Nice to meet you! Let me try to remember who you are.")]]>
                </content>
              </script>
              <pluginContent>
                <text>
                  <![CDATA[Hey! Nice to meet you! Let me try to remember who you are.]]>
                </text>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
              <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
            </Box>
            <Box name="Say Text (1)" id="8" localization="8" tooltip="Say the text received on its input." x="611" y="117">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="Text Edit (1)" id="9" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="348" y="134">
              <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Hey! Nice to see you again!")]]>
                </content>
              </script>
              <pluginContent>
                <text>
                  <![CDATA[Hey! Nice to see you again!]]>
                </text>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
              <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
            </Box>
            <Box name="Say Text (2)" id="10" localization="8" tooltip="Say the text received on its input." x="1125" y="218">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="Text Edit (2)" id="11" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="862" y="235">
              <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Yeah!")]]>
                </content>
              </script>
              <pluginContent>
                <text>
                  <![CDATA[Yeah!]]>
                </text>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
              <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
            </Box>
            <Box name="Say Text (3)" id="12" localization="8" tooltip="Say the text received on its input." x="1124" y="319">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="Text Edit (3)" id="15" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="869" y="334">
              <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Bummer")]]>
                </content>
              </script>
              <pluginContent>
                <text>
                  <![CDATA[Bummer]]>
                </text>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
              <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
            </Box>
            <Box name="updatePreferences" id="7" localization="8" tooltip="Testing access to our database through choregraphe" x="1473" y="8">
              <bitmap>media/images/box/box-python-script.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import sqlite3

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.conn = None
        self.lr = 5

    def get_epsilon(self, user_id):
        epsilon = conn.execute("SELECT epsilon FROM preferenceTable WHERE user_id={}").format(user_id).fetchone()
        return epsilon

    def set_epsilon(self, user_id, epsilon):
        conn.execute("UPDATE preferenceTable SET epsilon={} WHERE user_id={}").format(epsilon, user_id)
        conn.commit()

    def get_response_value(user_id, performed_response):
        response_value = conn.execute("SELECT response{} FROM preferenceTable WHERE user_id={}").format(performed_response, user_id).fetchone()
        return response_value

    def update_preference(self, user_id, performed_response, reward):
        # QLearning Update Rule
        new_response_value = self.get_response_value(user_id, performed_response) + self.lr * reward

        # Update in Database
        conn.execute("UPDATE preferenceTable SET response{}={} WHERE user_id={}").format(performed_response, new_response_value, user_id)
        conn.commit()

    def onLoad(self):
        # Connect to database
        self.conn = sqlite3.connect('robot_db', check_same_thread=False)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        # Get parameters
        user_id = self.getParameter("user_id")
        performed_response = self.getParameter("performedResponse")
        reward = self.getParameter("reward")

        # Update preference value
        self.update_preference(user_id, performed_response, reward)

        # Get epsilon
        epsilon = self.get_epsilon(user_id)

        # Update epsilon, always keep a 0.1 chance of exploring
        if epsilon > 0.1:
            epsilon = epsilon - 0.05
            self.set_epsilon(user_id, epsilon)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Parameter name="performedResponse" inherits_from_parent="0" content_type="1" value="0" default_value="0" min="0" max="5" tooltip="" id="5" />
              <Parameter name="reward" inherits_from_parent="0" content_type="1" value="0" default_value="0" min="0" max="1" tooltip="" id="6" />
              <Parameter name="user_id" inherits_from_parent="0" content_type="3" value='&quot;0&quot;' default_value='&quot;0&quot;' custom_choice="0" tooltip="" id="7" />
            </Box>
            <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="4" />
            <Link inputowner="3" indexofinput="2" outputowner="6" indexofoutput="4" />
            <Link inputowner="3" indexofinput="4" outputowner="6" indexofoutput="5" />
            <Link inputowner="3" indexofinput="4" outputowner="4" indexofoutput="6" />
            <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="5" />
            <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="4" />
            <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
            <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="7" />
            <Link inputowner="8" indexofinput="2" outputowner="9" indexofoutput="3" />
            <Link inputowner="9" indexofinput="2" outputowner="4" indexofoutput="6" />
            <Link inputowner="3" indexofinput="2" outputowner="8" indexofoutput="4" />
            <Link inputowner="10" indexofinput="2" outputowner="11" indexofoutput="3" />
            <Link inputowner="12" indexofinput="2" outputowner="15" indexofoutput="3" />
            <Link inputowner="11" indexofinput="2" outputowner="13" indexofoutput="3" />
            <Link inputowner="1" indexofinput="3" outputowner="10" indexofoutput="4" />
            <Link inputowner="15" indexofinput="2" outputowner="14" indexofoutput="3" />
            <Link inputowner="1" indexofinput="3" outputowner="12" indexofoutput="4" />
            <Link inputowner="7" indexofinput="2" outputowner="1" indexofoutput="4" />
            <Link inputowner="4" indexofinput="2" outputowner="7" indexofoutput="4" />
            <Link inputowner="7" indexofinput="6" outputowner="13" indexofoutput="3" />
            <Link inputowner="7" indexofinput="6" outputowner="14" indexofoutput="3" />
            <Link inputowner="7" indexofinput="7" outputowner="3" indexofoutput="7" />
            <Link inputowner="7" indexofinput="5" outputowner="3" indexofoutput="6" />
            <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
          </Diagram>
        </BehaviorKeyframe>
      </BehaviorLayer>
    </Timeline>
  </Box>
</ChoregrapheProject>
