<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.ald.softbankrobotics.com/schema/choregraphe/project.xsd" xar_version="3">
  <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
    <bitmap>media/images/box/root.png</bitmap>
    <script language="4">
      <content>
        <![CDATA[]]>
      </content>
    </script>
    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
    <Input name="PeoplePerception/PeopleDetected" type="0" type_size="1" nature="4" stm_value_name="PeoplePerception/PeopleDetected" inner="1" tooltip="PeoplePerception/PeopleDetected desc" id="4" />
    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
    <Timeline enable="0">
      <BehaviorLayer name="behavior_layer1">
        <BehaviorKeyframe name="keyframe1" index="1">
          <Diagram scale="84.0896">
            <Box name="Face Reco." id="4" localization="8" tooltip="Detect people&apos;s face and recognize those which are known by the robot.&#x0A;&#x0A;Note: the robot needs to learn a face with the Learn Face box before he can recognize it." x="293" y="60">
              <bitmap>media/images/box/interaction/reco_face.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Input name="FaceDetected" type="0" type_size="1" nature="4" stm_value_name="FaceDetected" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="5" />
              <Output name="onRecognizedFaces" type="3" type_size="1" nature="2" inner="0" tooltip="Names of recognized faces. If several faces are recognized, they are sent one&#x0A;after an other on this output." id="6" />
              <Output name="newFace" type="1" type_size="1" nature="2" inner="0" tooltip="Sees a face but realizes it is not in it&apos;s database. " id="7" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Reco. Det. Faces" id="1" localization="8" tooltip="Process face detection extractor data (FaceDetected) to extract the labels of&#x0A;recognized faces and notify when there is a face detected but not recognized.&#x0A;&#x0A;An output (either one or the other) is stimulated each time the number of&#x0A;recognized faces change." x="183" y="68">
                        <bitmap>media/images/box/interaction/reco_face.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.timeFilteredResult = [];

    def onUnload(self):
        #puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(len(p) > 0):
            if(len(p[1]) > 0): # just in case of the ALValue is in the wrong format
                # get the ALValue returned by the time filtered recognition:
                #    - [] when nothing new.
                #    - [4] when a face has been detected but not recognized during the first 8s.
                #    - [2, [faceName]] when one face has been recognized.
                #    - [3, [faceName1, faceName2, ...]] when several faces have been recognized.
                self.timeFilteredResult = p[1][len(p[1]) -1]
                if( len(self.timeFilteredResult) == 1 ):
                    # If a face has been detected for more than 8s but not recognized
                    if(self.timeFilteredResult[0] == 4):
                        self.onDetectWithoutReco()
                elif( len(self.timeFilteredResult) == 2 ):
                    # If one or several faces have been recognized
                    if(self.timeFilteredResult[0] in [2, 3]):
                        for s in self.timeFilteredResult[1]:
                            self.onRecognizedFace( s )

    def onInput_onStop(self):
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input. It must be the&#x0A;FaceDetected extractor data." id="2" />
                        <Output name="onRecognizedFace" type="3" type_size="1" nature="1" inner="0" tooltip="Name of recognized face. If several faces are recognized, they are sent one after an&#x0A;other on this output.&#x0A;&#x0A;Note: if it is the wrong face which has been recognized, you have 7s to rename&#x0A;it with the relearn function available on one of  Add/Del Faces sub-boxes (Learn Face&#x0A;box)." id="3" />
                        <Output name="onDetectWithoutReco" type="1" type_size="1" nature="1" inner="0" tooltip="A face has been detected for more than 8s but has not been recognized. It means&#x0A;that the robot does not know this face but it would be a good idea to learn it." id="4" />
                      </Box>
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="6" outputowner="1" indexofoutput="3" />
                      <Link inputowner="0" indexofinput="7" outputowner="1" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="learnFace" id="6" localization="8" tooltip="This box is empty and should be used to create any box diagram you would like.&#x0A;&#x0A;To edit its diagram, double-click on it." x="525" y="126">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Output name="identity_id" type="3" type_size="1" nature="2" inner="0" tooltip="" id="5" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Learn Face" id="3" localization="8" tooltip="Teach the robot a new face to recognize. the robot&apos;s eyes will become green in case of&#x0A;success and red in case of failure.&#x0A;&#x0A;V1.1.0&#x0A;" x="491" y="35">
                        <bitmap>media/images/box/interaction/learn_face.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onLearn" type="3" type_size="1" nature="2" inner="0" tooltip="Name of the face you want to learn.&#x0A;&#x0A;After entering the name of the face, you have 5s to place in front of the robot&apos;s face.&#x0A;Then the learning process is launched and the robot&apos;s eyes get blue. After some&#x0A;seconds, his eyes should turn green (success) or red (failure).&#x0A;&#x0A;Note: You can learn several times the same face on different days and/or&#x0A;conditions to robustify the recognition process." id="2" />
                        <Output name="onSuccess" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent if the learning succeeded." id="3" />
                        <Output name="onFailure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent if the learning failed." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Learn Face" id="2" localization="8" tooltip="Learn a face to recognize it later.&#x0A;&#x0A;Note: You need to be just in front of the robot&apos;s face to teach him your face." x="624" y="60">
                                  <bitmap>media/images/box/interaction/face.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)


    def onLoad(self):
        try:
            self.faceDetectionModule = self.session().service("ALFaceDetection")
        except Exception as e:
            self.faceDetectionModule = None
            self.logger.error(e)
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onLearn(self, p):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        if( self.faceDetectionModule and self.faceDetectionModule.learnFace( p ) ):
            self.onSuccess()
        else:
            self.onFailure()
        self.bIsRunning = False

    def onInput_onReLearn(self, p):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        if( self.faceDetectionModule and self.faceDetectionModule.reLearnFace( p ) ):
            self.onSuccess()
        else:
            self.onFailure()
        self.bIsRunning = False]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onLearn" type="3" type_size="1" nature="2" inner="0" tooltip="Name of the face you want to learn." id="2" />
                                  <Input name="onReLearn" type="3" type_size="1" nature="2" inner="0" tooltip="Name of the face you want to relearn. Stimulating this input enables to use in a&#x0A;new learning process the latest images where a face has been wrongly&#x0A;recognized." id="3" />
                                  <Output name="onSuccess" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent if the operation succeeded. The face has been learnt." id="4" />
                                  <Output name="onFailure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent if the operation failed. The face has not been learnt." id="5" />
                                </Box>
                                <Box name="WaitToSendMsg" id="8" localization="8" tooltip="Wait for both inputs to be stimulated before sending the message." x="464" y="32">
                                  <bitmap>media/images/box/box-script.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.ok1 = None
        self.ok2 = False

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onMessage(self, p):
        if( not self.ok2 ):
            self.ok1 = p
        else:
            self.ok( p )

    def onInput_onSignal(self):
        if( self.ok1 == None ):
            self.ok2 = True
        else:
            self.ok( self.ok1 )

    def ok(self, p):
        self.ok1 = None
        self.ok2 = False
        self.onStopped( p )]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onMessage" type="0" type_size="1" nature="2" inner="0" tooltip="First signal to wait. This signal contains the message to transmit." id="2" />
                                  <Input name="onSignal" type="1" type_size="1" nature="2" inner="0" tooltip="Second signal to wait." id="3" />
                                  <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Message sent when both inputs are stimulated." id="4" />
                                </Box>
                                <Box name="Only Once" id="9" localization="8" tooltip="This box&apos;s output is stimulated only the first time the onSignal input is." x="71" y="37">
                                  <bitmap>media/images/box/box-script.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bFirstTime = True

    def onUnload(self):
        self.bFirstTime = True

    def onInput_onSignal(self, p):
        if( self.bFirstTime ):
            self.bFirstTime = False
            self.firstTime(p)]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onSignal" type="0" type_size="1" nature="1" inner="0" tooltip="The signal that must pass only once." id="2" />
                                  <Output name="firstTime" type="0" type_size="1" nature="2" inner="0" tooltip="Signal sent first time the onSignal input is stimulated." id="3" />
                                </Box>
                                <Box name="Eyes LEDs" id="5" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes. Note that you must enter the box to enter the color." x="776" y="12">
                                  <bitmap>media/images/box/interaction/LED.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                  <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                                    <Choice value="Both" />
                                    <Choice value="Left" />
                                    <Choice value="Right" />
                                  </Parameter>
                                  <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.fadeOps = []
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        fadeOp = self.leds.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"), _async=True)
        self.fadeOps.append(fadeOp)
        fadeOp.wait()
        self.fadeOps.remove(fadeOp)
        if( self.fadeOps == [] ):
            self.onDone() # activate output of the box]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                                            <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                            <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                                              <Choice value="Both" />
                                              <Choice value="Left" />
                                              <Choice value="Right" />
                                            </Parameter>
                                            <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                                          </Box>
                                          <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([0, 255, 0])]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <color>#00ff00</color>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                                            <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                          </Box>
                                          <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                                          <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Box name="Eyes LEDs" id="6" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes. Note that you must enter the box to enter the color." x="776" y="114">
                                  <bitmap>media/images/box/interaction/LED.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                  <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                                    <Choice value="Both" />
                                    <Choice value="Left" />
                                    <Choice value="Right" />
                                  </Parameter>
                                  <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.fadeOps = []
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        fadeOp = self.leds.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"), _async=True)
        self.fadeOps.append(fadeOp)
        fadeOp.wait()
        self.fadeOps.remove(fadeOp)
        if( self.fadeOps == [] ):
            self.onDone() # activate output of the box]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                                            <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                            <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                                              <Choice value="Both" />
                                              <Choice value="Left" />
                                              <Choice value="Right" />
                                            </Parameter>
                                            <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                                          </Box>
                                          <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([255, 0, 0])]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <color>#ff0000</color>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                                            <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                          </Box>
                                          <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                                          <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Box name="Eyes LEDs" id="1" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes. Note that you must enter the box to enter the color." x="330" y="122">
                                  <bitmap>media/images/box/interaction/LED.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                  <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                                    <Choice value="Both" />
                                    <Choice value="Left" />
                                    <Choice value="Right" />
                                  </Parameter>
                                  <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.fadeOps = []
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        fadeOp = self.leds.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"), _async=True)
        self.fadeOps.append(fadeOp)
        fadeOp.wait()
        self.fadeOps.remove(fadeOp)
        if( self.fadeOps == [] ):
            self.onDone() # activate output of the box]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                                            <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                            <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                                              <Choice value="Both" />
                                              <Choice value="Left" />
                                              <Choice value="Right" />
                                            </Parameter>
                                            <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                                          </Box>
                                          <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([0, 170, 255])]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <color>#00aaff</color>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                                            <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                          </Box>
                                          <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                                          <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Box name="Wait" id="3" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="200" y="95">
                                  <bitmap>media/images/box/wait.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                  <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped." id="4" />
                                  <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                  <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                                </Box>
                                <Link inputowner="2" indexofinput="2" outputowner="8" indexofoutput="4" />
                                <Link inputowner="9" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="8" indexofinput="2" outputowner="9" indexofoutput="3" />
                                <Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="4" />
                                <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="5" />
                                <Link inputowner="0" indexofinput="3" outputowner="5" indexofoutput="3" />
                                <Link inputowner="0" indexofinput="4" outputowner="6" indexofoutput="3" />
                                <Link inputowner="3" indexofinput="2" outputowner="9" indexofoutput="3" />
                                <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" />
                                <Link inputowner="8" indexofinput="3" outputowner="3" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="addIdentity" id="11" localization="8" tooltip="Testing access to our database through choregraphe" x="300" y="33">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import sqlite3

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.conn = None

    # will add new fae with unique id, default to
    def add_new_face(self, preferences=0):
        cursor = self.conn.cursor()
        cursor.execute("INSERT INTO faces(user_id, preference) VALUES({},{})".format('NULL', preferences))
        self.conn.commit()
        return cursor.lastrowid

    def onLoad(self):
        self.conn = sqlite3.connect('robot_db', check_same_thread=False)

        # If table faces does not yet exist, create a new one
        result = self.conn.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='faces';").fetchone()
        if not result:
            self.conn.execute("CREATE TABLE faces (user_id INTEGER PRIMARY KEY NOT NULL, preference INTEGER);")
        self.conn.commit()

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        # add a new name to the database
        id = self.add_new_face()

        # return that unique id to be learned by the Choregraphe database
        self.uniqueID(id)

        self.onStopped()

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Output name="uniqueID" type="3" type_size="1" nature="2" inner="0" tooltip="ID of learned face to connect with choregraphe database" id="5" />
                      </Box>
                      <Box name="Only Once" id="13" localization="8" tooltip="This box&apos;s output is stimulated only the first time the onSignal input is.&#x0A;&#x0A;Note: It is reset when the diagram containing the box is unloaded." x="136" y="48">
                        <bitmap>media/images/box/loop.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bFirstTime = True

    def onUnload(self):
        self.bFirstTime = True

    def onInput_onSignal(self):
        if( self.bFirstTime ):
            self.bFirstTime = False
            self.firstTime()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onSignal" type="1" type_size="1" nature="1" inner="0" tooltip="The signal that must pass only once." id="2" />
                        <Output name="firstTime" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent first time the onSignal input is stimulated." id="3" />
                      </Box>
                      <Link inputowner="11" indexofinput="2" outputowner="13" indexofoutput="3" />
                      <Link inputowner="3" indexofinput="2" outputowner="11" indexofoutput="5" />
                      <Link inputowner="13" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="5" outputowner="11" indexofoutput="5" />
                      <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="3" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="doResponse" id="3" localization="8" tooltip="This box is empty and should be used to create any box diagram you would like.&#x0A;&#x0A;To edit its diagram, double-click on it." x="777" y="59">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Input name="user_id" type="3" type_size="1" nature="1" inner="0" tooltip="" id="4" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
              <Output name="response" type="2" type_size="1" nature="2" inner="0" tooltip="" id="6" />
              <Output name="userID" type="3" type_size="1" nature="2" inner="0" tooltip="" id="7" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="getResponse" id="11" localization="8" tooltip="Testing access to our database through choregraphe" x="110" y="16">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import sqlite3

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.conn = None

    # will add new fae with unique id, default to
    def get_preference(self, user_id):
        result = conn.execute("SELECT preference FROM faces WHERE user_id={}").format(user_id).fetchone()
        return result

    def onInput_userId(self, user_id):
        self.logger.log("test")
        # get a preference from the database given an identity
        preference = self.get_preference(self.user_id)

        # return that preference
        self.preference(preference)

    def onLoad(self):
        # Connect to database
        self.conn = sqlite3.connect('robot_db', check_same_thread=False)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Input name="userId" type="3" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                        <Output name="preference" type="2" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                      </Box>
                      <Box name="Response1" id="1" localization="8" tooltip="This box is empty and should be used to create any box diagram you would like.&#x0A;&#x0A;To edit its diagram, double-click on it." x="688" y="216">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Kisses (1)" id="73" localization="8" tooltip="ID : #02A 0002&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Kisses" x="348" y="66">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="138">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="21" value="-4.3091" />
                                        <Key frame="41" value="-2.81494" />
                                        <Key frame="63" value="-1.84813" />
                                        <Key frame="90" value="-1.84813" />
                                        <Key frame="108" value="-2.02391" />
                                        <Key frame="138" value="-2.11181" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="21" value="-18.3718" />
                                        <Key frame="41" value="-0.79343" />
                                        <Key frame="63" value="-21.0085" />
                                        <Key frame="90" value="-17" />
                                        <Key frame="108" value="-22.9421" />
                                        <Key frame="138" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="19" value="49.4806" />
                                        <Key frame="39" value="21.0037" />
                                        <Key frame="61" value="10.7204" />
                                        <Key frame="88" value="54.7541" />
                                        <Key frame="106" value="80.067" />
                                        <Key frame="136" value="84.8131" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="19" value="1.75543" />
                                        <Key frame="39" value="1.40386" />
                                        <Key frame="61" value="0.876513" />
                                        <Key frame="88" value="52.3811" />
                                        <Key frame="106" value="33.6601" />
                                        <Key frame="136" value="3.86483" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="19" value="-110.746" />
                                        <Key frame="39" value="-45.9698" />
                                        <Key frame="61" value="-50.2765" />
                                        <Key frame="88" value="-101.517" />
                                        <Key frame="106" value="-109.691" />
                                        <Key frame="136" value="-65.4817" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="19" value="-30.6718" />
                                        <Key frame="39" value="-89.5017" />
                                        <Key frame="61" value="-89.2077" />
                                        <Key frame="88" value="-44.9982" />
                                        <Key frame="106" value="-28.6503" />
                                        <Key frame="136" value="-21.619" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="39" value="-68.4701" />
                                        <Key frame="61" value="-64.427" />
                                        <Key frame="88" value="-88" />
                                        <Key frame="106" value="-64.8665" />
                                        <Key frame="136" value="-8.00055" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="39" value="0.73166" />
                                        <Key frame="61" value="0.702933" />
                                        <Key frame="88" value="0.8" />
                                        <Key frame="106" value="0.676387" />
                                        <Key frame="136" value="0.109844" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="17" value="57.923" />
                                        <Key frame="37" value="23.3816" />
                                        <Key frame="59" value="1.76024" />
                                        <Key frame="86" value="63.3723" />
                                        <Key frame="104" value="80.0718" />
                                        <Key frame="134" value="88.0699" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="17" value="-9.84628" />
                                        <Key frame="37" value="-2.02391" />
                                        <Key frame="59" value="-6.24272" />
                                        <Key frame="86" value="-48.6944" />
                                        <Key frame="104" value="-37.2685" />
                                        <Key frame="134" value="-2.46337" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="17" value="119.496" />
                                        <Key frame="37" value="50.5353" />
                                        <Key frame="59" value="38.8457" />
                                        <Key frame="86" value="111.181" />
                                        <Key frame="104" value="119.442" />
                                        <Key frame="134" value="86.5709" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="17" value="30.2372" />
                                        <Key frame="37" value="89.3004" />
                                        <Key frame="59" value="89.5017" />
                                        <Key frame="86" value="41.0478" />
                                        <Key frame="104" value="23.9968" />
                                        <Key frame="134" value="25.0515" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="37" value="57.4788" />
                                        <Key frame="59" value="56.9514" />
                                        <Key frame="86" value="80" />
                                        <Key frame="104" value="56.8635" />
                                        <Key frame="134" value="0.173379" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="37" value="0.789478" />
                                        <Key frame="59" value="0.758933" />
                                        <Key frame="86" value="0.909091" />
                                        <Key frame="104" value="0.730569" />
                                        <Key frame="134" value="0.22548" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="38" value="-15.5544" />
                                        <Key frame="60" value="-16.7849" />
                                        <Key frame="87" value="-18.9822" />
                                        <Key frame="105" value="-18.9822" />
                                        <Key frame="135" value="-17.9275" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="38" value="6.59428" />
                                        <Key frame="60" value="1.58446" />
                                        <Key frame="87" value="-0.349163" />
                                        <Key frame="105" value="-0.173379" />
                                        <Key frame="135" value="5.45169" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="38" value="20.5691" />
                                        <Key frame="60" value="5.80326" />
                                        <Key frame="87" value="-1.84332" />
                                        <Key frame="105" value="-1.84332" />
                                        <Key frame="135" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="38" value="-5.29104" />
                                        <Key frame="60" value="-5.29104" />
                                        <Key frame="87" value="-5.29104" />
                                        <Key frame="105" value="-5.29104" />
                                        <Key frame="135" value="-5.10012" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="38" value="3.33748" />
                                        <Key frame="60" value="9.40201" />
                                        <Key frame="87" value="14.4997" />
                                        <Key frame="105" value="14.4118" />
                                        <Key frame="135" value="6.76526" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="38" value="-5.09532" />
                                        <Key frame="60" value="-2.28278" />
                                        <Key frame="87" value="-0.876513" />
                                        <Key frame="105" value="-0.876513" />
                                        <Key frame="135" value="-4.91953" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="38" value="-6.15002" />
                                        <Key frame="60" value="-3.1617" />
                                        <Key frame="87" value="0.353971" />
                                        <Key frame="105" value="0.353971" />
                                        <Key frame="135" value="-3.33748" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="38" value="21.2674" />
                                        <Key frame="60" value="5.53477" />
                                        <Key frame="87" value="-1.93602" />
                                        <Key frame="105" value="-2.02391" />
                                        <Key frame="135" value="12.4782" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="38" value="-5.71056" />
                                        <Key frame="60" value="-5.88634" />
                                        <Key frame="87" value="-5.90622" />
                                        <Key frame="105" value="-5.88634" />
                                        <Key frame="135" value="-4.39218" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="38" value="2.72705" />
                                        <Key frame="60" value="9.40682" />
                                        <Key frame="87" value="14.4166" />
                                        <Key frame="105" value="14.5924" />
                                        <Key frame="135" value="6.15482" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="38" value="4.13332" />
                                        <Key frame="60" value="3.07861" />
                                        <Key frame="87" value="0.617646" />
                                        <Key frame="105" value="0.705538" />
                                        <Key frame="135" value="2.81494" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Link inputowner="73" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="73" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="Response2" id="2" localization="8" tooltip="This box is empty and should be used to create any box diagram you would like.&#x0A;&#x0A;To edit its diagram, double-click on it." x="688" y="336">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Excited" id="1" localization="8" tooltip="ID : #02A 0003&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Excited" x="330" y="88">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="54">
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="7" value="-38.5" />
                                        <Key frame="14" value="-1.4" />
                                        <Key frame="17" value="-28.8" />
                                        <Key frame="22" value="-11.2" />
                                        <Key frame="26" value="-28.8" />
                                        <Key frame="31" value="-11.2" />
                                        <Key frame="35" value="-28.8" />
                                        <Key frame="39" value="-11.2" />
                                        <Key frame="50" value="-25.2" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                        <Key frame="7" value="-0.969218" />
                                        <Key frame="50" value="-0.969218" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                                        <Key frame="14" value="-8.17634" />
                                        <Key frame="18" value="-10.4615" />
                                        <Key frame="22" value="-8.17634" />
                                        <Key frame="26" value="-10.4615" />
                                        <Key frame="30" value="-8.17634" />
                                        <Key frame="34" value="-10.4615" />
                                        <Key frame="38" value="-8.17634" />
                                        <Key frame="42" value="-10.4615" />
                                        <Key frame="46" value="-8.17634" />
                                        <Key frame="50" value="-10.4615" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                                        <Key frame="14" value="-6.32579" />
                                        <Key frame="18" value="-6.32579" />
                                        <Key frame="22" value="-6.32579" />
                                        <Key frame="26" value="-6.32579" />
                                        <Key frame="30" value="-6.32579" />
                                        <Key frame="34" value="-6.32579" />
                                        <Key frame="38" value="-6.32579" />
                                        <Key frame="42" value="-6.32579" />
                                        <Key frame="46" value="-6.32579" />
                                        <Key frame="50" value="-6.32579" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="10" value="-85.5" />
                                        <Key frame="18" value="-85.9557" />
                                        <Key frame="22" value="-74.5" />
                                        <Key frame="26" value="-85.9557" />
                                        <Key frame="30" value="-74.5" />
                                        <Key frame="34" value="-85.9557" />
                                        <Key frame="38" value="-74.5" />
                                        <Key frame="42" value="-85.9557" />
                                        <Key frame="46" value="-74.5" />
                                        <Key frame="50" value="-85.9557" />
                                        <Key frame="54" value="-74.5" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="18" value="-81.3901" />
                                        <Key frame="26" value="-81.3901" />
                                        <Key frame="34" value="-81.3901" />
                                        <Key frame="42" value="-81.3901" />
                                        <Key frame="50" value="-81.3901" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="10" value="0.63" />
                                        <Key frame="18" value="0.27" />
                                        <Key frame="22" value="0" />
                                        <Key frame="26" value="0.24" />
                                        <Key frame="30" value="0" />
                                        <Key frame="34" value="0.28" />
                                        <Key frame="38" value="0" />
                                        <Key frame="42" value="0.26" />
                                        <Key frame="46" value="0" />
                                        <Key frame="50" value="0.24" />
                                        <Key frame="54" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                                        <Key frame="14" value="-28.0351" />
                                        <Key frame="18" value="-38.1426" />
                                        <Key frame="22" value="-28.0351" />
                                        <Key frame="26" value="-38.1426" />
                                        <Key frame="30" value="-28.0351" />
                                        <Key frame="34" value="-38.1426" />
                                        <Key frame="38" value="-28.0351" />
                                        <Key frame="42" value="-38.1426" />
                                        <Key frame="46" value="-28.0351" />
                                        <Key frame="50" value="-38.1426" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                                        <Key frame="14" value="4.3091" />
                                        <Key frame="18" value="4.3091" />
                                        <Key frame="22" value="4.3091" />
                                        <Key frame="26" value="4.3091" />
                                        <Key frame="30" value="4.3091" />
                                        <Key frame="34" value="4.3091" />
                                        <Key frame="38" value="4.3091" />
                                        <Key frame="42" value="4.3091" />
                                        <Key frame="46" value="4.3091" />
                                        <Key frame="50" value="4.3091" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                                        <Key frame="14" value="-11.7751" />
                                        <Key frame="18" value="-13.0056" />
                                        <Key frame="22" value="-11.7751" />
                                        <Key frame="26" value="-13.0056" />
                                        <Key frame="30" value="-11.7751" />
                                        <Key frame="34" value="-13.0056" />
                                        <Key frame="38" value="-11.7751" />
                                        <Key frame="42" value="-13.0056" />
                                        <Key frame="46" value="-11.7751" />
                                        <Key frame="50" value="-13.0056" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                                        <Key frame="14" value="37" />
                                        <Key frame="18" value="46.9318" />
                                        <Key frame="22" value="37" />
                                        <Key frame="26" value="46.9318" />
                                        <Key frame="30" value="37" />
                                        <Key frame="34" value="46.9318" />
                                        <Key frame="38" value="37" />
                                        <Key frame="42" value="46.9318" />
                                        <Key frame="46" value="37" />
                                        <Key frame="50" value="46.9318" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="8" value="54.2" />
                                        <Key frame="16" value="66.2" />
                                        <Key frame="20" value="69.6" />
                                        <Key frame="24" value="66.2" />
                                        <Key frame="28" value="69.6" />
                                        <Key frame="32" value="66.2" />
                                        <Key frame="36" value="69.6" />
                                        <Key frame="40" value="66.2" />
                                        <Key frame="44" value="69.6" />
                                        <Key frame="48" value="66.2" />
                                        <Key frame="52" value="69.6" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="8" value="12.8" />
                                        <Key frame="16" value="-6.3306" />
                                        <Key frame="24" value="-6.3306" />
                                        <Key frame="32" value="-6.3306" />
                                        <Key frame="40" value="-6.3306" />
                                        <Key frame="48" value="-6.3306" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="10" value="-36.1" />
                                        <Key frame="18" value="5.79845" />
                                        <Key frame="26" value="5.79845" />
                                        <Key frame="34" value="5.79845" />
                                        <Key frame="42" value="5.79845" />
                                        <Key frame="50" value="5.79845" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                                        <Key frame="14" value="-10.7204" />
                                        <Key frame="18" value="-13.3571" />
                                        <Key frame="22" value="-10.7204" />
                                        <Key frame="26" value="-13.3571" />
                                        <Key frame="30" value="-10.7204" />
                                        <Key frame="34" value="-13.3571" />
                                        <Key frame="38" value="-10.7204" />
                                        <Key frame="42" value="-13.3571" />
                                        <Key frame="46" value="-10.7204" />
                                        <Key frame="50" value="-13.3571" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                                        <Key frame="14" value="7.12163" />
                                        <Key frame="18" value="7.12163" />
                                        <Key frame="22" value="7.12163" />
                                        <Key frame="26" value="7.12163" />
                                        <Key frame="30" value="7.12163" />
                                        <Key frame="34" value="7.12163" />
                                        <Key frame="38" value="7.12163" />
                                        <Key frame="42" value="7.12163" />
                                        <Key frame="46" value="7.12163" />
                                        <Key frame="50" value="7.12163" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="10" value="85.5" />
                                        <Key frame="15" value="85.1695" />
                                        <Key frame="19" value="74.5" />
                                        <Key frame="23" value="85.1695" />
                                        <Key frame="27" value="74.5" />
                                        <Key frame="31" value="85.1695" />
                                        <Key frame="35" value="74.5" />
                                        <Key frame="39" value="85.1695" />
                                        <Key frame="43" value="74.5" />
                                        <Key frame="47" value="85.1695" />
                                        <Key frame="51" value="74.5" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="15" value="76.7271" />
                                        <Key frame="23" value="76.7271" />
                                        <Key frame="31" value="76.7271" />
                                        <Key frame="39" value="76.7271" />
                                        <Key frame="47" value="76.7271" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="10" value="0.63" />
                                        <Key frame="15" value="0.27" />
                                        <Key frame="19" value="0" />
                                        <Key frame="23" value="0.24" />
                                        <Key frame="27" value="0" />
                                        <Key frame="31" value="0.28" />
                                        <Key frame="35" value="0" />
                                        <Key frame="39" value="0.26" />
                                        <Key frame="43" value="0" />
                                        <Key frame="47" value="0.24" />
                                        <Key frame="51" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                                        <Key frame="14" value="-27.8641" />
                                        <Key frame="18" value="-38.1474" />
                                        <Key frame="22" value="-27.8641" />
                                        <Key frame="26" value="-38.1474" />
                                        <Key frame="30" value="-27.8641" />
                                        <Key frame="34" value="-38.1474" />
                                        <Key frame="38" value="-27.8641" />
                                        <Key frame="42" value="-38.1474" />
                                        <Key frame="46" value="-27.8641" />
                                        <Key frame="50" value="-38.1474" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                                        <Key frame="14" value="-4.30429" />
                                        <Key frame="18" value="-3.68905" />
                                        <Key frame="22" value="-4.30429" />
                                        <Key frame="26" value="-3.68905" />
                                        <Key frame="30" value="-4.30429" />
                                        <Key frame="34" value="-3.68905" />
                                        <Key frame="38" value="-4.30429" />
                                        <Key frame="42" value="-3.68905" />
                                        <Key frame="46" value="-4.30429" />
                                        <Key frame="50" value="-3.68905" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                                        <Key frame="14" value="-11.7751" />
                                        <Key frame="18" value="-13.0056" />
                                        <Key frame="22" value="-11.7751" />
                                        <Key frame="26" value="-13.0056" />
                                        <Key frame="30" value="-11.7751" />
                                        <Key frame="34" value="-13.0056" />
                                        <Key frame="38" value="-11.7751" />
                                        <Key frame="42" value="-13.0056" />
                                        <Key frame="46" value="-11.7751" />
                                        <Key frame="50" value="-13.0056" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                                        <Key frame="14" value="38.0595" />
                                        <Key frame="18" value="48.3428" />
                                        <Key frame="22" value="38.0595" />
                                        <Key frame="26" value="48.3428" />
                                        <Key frame="30" value="38.0595" />
                                        <Key frame="34" value="48.3428" />
                                        <Key frame="38" value="38.0595" />
                                        <Key frame="42" value="48.3428" />
                                        <Key frame="46" value="38.0595" />
                                        <Key frame="50" value="48.3428" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="8" value="54.2" />
                                        <Key frame="13" value="66.2" />
                                        <Key frame="17" value="69.6" />
                                        <Key frame="21" value="66.2" />
                                        <Key frame="25" value="69.6" />
                                        <Key frame="29" value="66.2" />
                                        <Key frame="33" value="69.6" />
                                        <Key frame="37" value="66.2" />
                                        <Key frame="41" value="69.6" />
                                        <Key frame="45" value="66.2" />
                                        <Key frame="49" value="69.6" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="8" value="-12.8" />
                                        <Key frame="13" value="4.30429" />
                                        <Key frame="21" value="4.30429" />
                                        <Key frame="29" value="4.30429" />
                                        <Key frame="37" value="4.30429" />
                                        <Key frame="45" value="4.30429" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="10" value="36.1" />
                                        <Key frame="15" value="6.32579" />
                                        <Key frame="23" value="6.32579" />
                                        <Key frame="31" value="6.32579" />
                                        <Key frame="39" value="6.32579" />
                                        <Key frame="47" value="6.32579" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="Response3" id="3" localization="8" tooltip="This box is empty and should be used to create any box diagram you would like.&#x0A;&#x0A;To edit its diagram, double-click on it." x="691" y="463">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Happy" id="12" localization="8" tooltip="ID : #02A 0001&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Happy" x="287" y="16">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="87">
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="-15" />
                                        <Key frame="23" value="-8.48092" />
                                        <Key frame="27" value="-12.3871" />
                                        <Key frame="31" value="-10.217" />
                                        <Key frame="36" value="-15" />
                                        <Key frame="40" value="-8.26391" />
                                        <Key frame="44" value="-12.1701" />
                                        <Key frame="48" value="-10" />
                                        <Key frame="54" value="-15" />
                                        <Key frame="58" value="-8.26391" />
                                        <Key frame="62" value="-12.1701" />
                                        <Key frame="66" value="-10" />
                                        <Key frame="71" value="-15" />
                                        <Key frame="75" value="-10.676" />
                                        <Key frame="87" value="-11.5137" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="15" value="-0.615236" />
                                        <Key frame="24" value="2" />
                                        <Key frame="40" value="-2" />
                                        <Key frame="58" value="2" />
                                        <Key frame="74" value="-2" />
                                        <Key frame="87" value="-0.175782" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HipPitch" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="-10.1" />
                                        <Key frame="84" value="-2.02149" />
                                        <Key frame="87" value="-1.84571" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HipRoll" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="5" />
                                        <Key frame="36" value="-5" />
                                        <Key frame="54" value="5" />
                                        <Key frame="71" value="-5" />
                                        <Key frame="84" value="-0.0878909" />
                                        <Key frame="87" value="0.175782" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="KneePitch" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="3.5" />
                                        <Key frame="84" value="-0.175782" />
                                        <Key frame="87" value="0.351564" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="-53" />
                                        <Key frame="28" value="-38.4" />
                                        <Key frame="36" value="-61.1" />
                                        <Key frame="45" value="-38.4" />
                                        <Key frame="54" value="-53" />
                                        <Key frame="63" value="-38.4" />
                                        <Key frame="71" value="-61.1" />
                                        <Key frame="79" value="-38.4" />
                                        <Key frame="87" value="-29.9707" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="-63.5" />
                                        <Key frame="36" value="-100.538" />
                                        <Key frame="54" value="-63.5" />
                                        <Key frame="71" value="-100.538" />
                                        <Key frame="87" value="-70.4883" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" alwaysVisible="1" unit="1">
                                        <Key frame="20" value="0.020089" />
                                        <Key frame="28" value="0.34" />
                                        <Key frame="36" value="0.173538" />
                                        <Key frame="45" value="0.34" />
                                        <Key frame="54" value="0.020089" />
                                        <Key frame="63" value="0.34" />
                                        <Key frame="71" value="0.173538" />
                                        <Key frame="79" value="0.34" />
                                        <Key frame="87" value="0.582601" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="75.4" />
                                        <Key frame="36" value="101.5" />
                                        <Key frame="54" value="75.4" />
                                        <Key frame="71" value="101.5" />
                                        <Key frame="87" value="89.3848" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="14.8" />
                                        <Key frame="36" value="14.4" />
                                        <Key frame="54" value="14.8" />
                                        <Key frame="71" value="14.4" />
                                        <Key frame="87" value="8.17382" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="-6.39955" />
                                        <Key frame="36" value="0.723418" />
                                        <Key frame="54" value="-6.39955" />
                                        <Key frame="71" value="0.723418" />
                                        <Key frame="87" value="0.876518" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="61.1" />
                                        <Key frame="28" value="39.8" />
                                        <Key frame="36" value="53" />
                                        <Key frame="45" value="39.8" />
                                        <Key frame="54" value="61.1" />
                                        <Key frame="63" value="39.8" />
                                        <Key frame="71" value="53" />
                                        <Key frame="79" value="39.8" />
                                        <Key frame="87" value="29.9707" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="100.538" />
                                        <Key frame="36" value="63.5" />
                                        <Key frame="54" value="100.538" />
                                        <Key frame="71" value="63.5" />
                                        <Key frame="87" value="70.1367" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" alwaysVisible="1" unit="1">
                                        <Key frame="20" value="0.173538" />
                                        <Key frame="28" value="0.29" />
                                        <Key frame="36" value="0.020089" />
                                        <Key frame="45" value="0.29" />
                                        <Key frame="54" value="0.173538" />
                                        <Key frame="63" value="0.29" />
                                        <Key frame="71" value="0.020089" />
                                        <Key frame="79" value="0.29" />
                                        <Key frame="87" value="0.585237" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="101.5" />
                                        <Key frame="36" value="75.4" />
                                        <Key frame="54" value="101.5" />
                                        <Key frame="71" value="75.4" />
                                        <Key frame="87" value="89.1211" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="-14.4" />
                                        <Key frame="36" value="-14.8" />
                                        <Key frame="54" value="-14.4" />
                                        <Key frame="71" value="-14.8" />
                                        <Key frame="87" value="-8.34961" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" alwaysVisible="1" unit="0">
                                        <Key frame="20" value="-0.723418" />
                                        <Key frame="36" value="6.39955" />
                                        <Key frame="54" value="-0.723418" />
                                        <Key frame="71" value="6.39955" />
                                        <Key frame="87" value="0.788627" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Link inputowner="12" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="12" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="Response4" id="4" localization="8" tooltip="This box is empty and should be used to create any box diagram you would like.&#x0A;&#x0A;To edit its diagram, double-click on it." x="696" y="584">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Chill" id="7" localization="8" tooltip="ID : #02B 0003&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Chill" x="311" y="135">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="193">
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="15" value="2.98591" />
                                        <Key frame="31" value="18.7" />
                                        <Key frame="39" value="18.7" />
                                        <Key frame="57" value="19.2459" />
                                        <Key frame="64" value="19.2459" />
                                        <Key frame="71" value="14" />
                                        <Key frame="81" value="-21.9" />
                                        <Key frame="91" value="-21.9" />
                                        <Key frame="112" value="-21.9" />
                                        <Key frame="123" value="-21.9" />
                                        <Key frame="137" value="18.7" />
                                        <Key frame="145" value="18.7" />
                                        <Key frame="163" value="19.2459" />
                                        <Key frame="170" value="19.2459" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                        <Key frame="15" value="-7.9" />
                                        <Key frame="31" value="13.1" />
                                        <Key frame="39" value="13.1" />
                                        <Key frame="57" value="-14.8" />
                                        <Key frame="64" value="-13.1" />
                                        <Key frame="81" value="13.1" />
                                        <Key frame="91" value="13.1" />
                                        <Key frame="112" value="-13.1" />
                                        <Key frame="123" value="-13.1" />
                                        <Key frame="137" value="13.1" />
                                        <Key frame="145" value="13.1" />
                                        <Key frame="163" value="-14.8" />
                                        <Key frame="170" value="-13.1" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                                        <Key frame="14" value="-12.0436" />
                                        <Key frame="41" value="-7.12163" />
                                        <Key frame="66" value="-10.1978" />
                                        <Key frame="91" value="-4.2164" />
                                        <Key frame="118" value="-10.1978" />
                                        <Key frame="142" value="-7.12163" />
                                        <Key frame="167" value="-10.1978" />
                                        <Key frame="192" value="-4.2164" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                                        <Key frame="14" value="-2.89802" />
                                        <Key frame="41" value="2.55127" />
                                        <Key frame="91" value="-9.40682" />
                                        <Key frame="142" value="2.55127" />
                                        <Key frame="192" value="-9.40682" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="15" value="-37.2637" />
                                        <Key frame="42" value="-41.043" />
                                        <Key frame="67" value="-48.6" />
                                        <Key frame="92" value="-38.4111" />
                                        <Key frame="119" value="-48.6" />
                                        <Key frame="143" value="-41.043" />
                                        <Key frame="168" value="-48.6" />
                                        <Key frame="193" value="-38.4111" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="15" value="-69.9642" />
                                        <Key frame="42" value="-44.4756" />
                                        <Key frame="67" value="-39.3779" />
                                        <Key frame="92" value="-20.3885" />
                                        <Key frame="119" value="-39.3779" />
                                        <Key frame="143" value="-44.4756" />
                                        <Key frame="168" value="-39.3779" />
                                        <Key frame="193" value="-20.3885" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="15" value="0.73" />
                                        <Key frame="42" value="0.306" />
                                        <Key frame="67" value="0.37" />
                                        <Key frame="92" value="0.3048" />
                                        <Key frame="119" value="0.37" />
                                        <Key frame="143" value="0.306" />
                                        <Key frame="168" value="0.37" />
                                        <Key frame="193" value="0.3048" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                                        <Key frame="14" value="-5.18321" />
                                        <Key frame="41" value="27.73" />
                                        <Key frame="66" value="8.17634" />
                                        <Key frame="91" value="25.2225" />
                                        <Key frame="118" value="8.17634" />
                                        <Key frame="142" value="27.73" />
                                        <Key frame="167" value="8.17634" />
                                        <Key frame="192" value="25.2225" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                                        <Key frame="14" value="2.37549" />
                                        <Key frame="41" value="-3.60116" />
                                        <Key frame="91" value="10.1051" />
                                        <Key frame="142" value="-3.60116" />
                                        <Key frame="192" value="10.1051" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                                        <Key frame="14" value="-10.3688" />
                                        <Key frame="41" value="-8.4352" />
                                        <Key frame="66" value="-10.2809" />
                                        <Key frame="91" value="-8.4352" />
                                        <Key frame="118" value="-10.2809" />
                                        <Key frame="142" value="-8.4352" />
                                        <Key frame="167" value="-10.2809" />
                                        <Key frame="192" value="-8.4352" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                                        <Key frame="14" value="24.2557" />
                                        <Key frame="41" value="-5.18802" />
                                        <Key frame="66" value="13.5329" />
                                        <Key frame="91" value="-5.18321" />
                                        <Key frame="118" value="13.5329" />
                                        <Key frame="142" value="-5.18802" />
                                        <Key frame="167" value="13.5329" />
                                        <Key frame="192" value="-5.18321" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="15" value="75.0571" />
                                        <Key frame="42" value="71.4" />
                                        <Key frame="67" value="69.3442" />
                                        <Key frame="92" value="67.9" />
                                        <Key frame="119" value="69.3442" />
                                        <Key frame="143" value="71.4" />
                                        <Key frame="168" value="69.3442" />
                                        <Key frame="193" value="67.9" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="15" value="2.28279" />
                                        <Key frame="42" value="-5.71537" />
                                        <Key frame="67" value="2" />
                                        <Key frame="92" value="-5.62267" />
                                        <Key frame="119" value="2" />
                                        <Key frame="143" value="-5.71537" />
                                        <Key frame="168" value="2" />
                                        <Key frame="193" value="-5.62267" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="15" value="0.173378" />
                                        <Key frame="42" value="31.287" />
                                        <Key frame="67" value="6.4137" />
                                        <Key frame="92" value="-9.22623" />
                                        <Key frame="119" value="6.4137" />
                                        <Key frame="143" value="31.287" />
                                        <Key frame="168" value="6.4137" />
                                        <Key frame="193" value="-9.22623" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                                        <Key frame="14" value="-7.3805" />
                                        <Key frame="41" value="-4.2164" />
                                        <Key frame="66" value="-6.58948" />
                                        <Key frame="91" value="-7.12163" />
                                        <Key frame="118" value="-6.58948" />
                                        <Key frame="142" value="-4.2164" />
                                        <Key frame="167" value="-6.58948" />
                                        <Key frame="192" value="-7.12163" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                                        <Key frame="14" value="7.38531" />
                                        <Key frame="41" value="9.40682" />
                                        <Key frame="91" value="-2.55127" />
                                        <Key frame="142" value="9.40682" />
                                        <Key frame="192" value="-2.55127" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="13" value="30.9403" />
                                        <Key frame="40" value="38.4111" />
                                        <Key frame="65" value="48.6" />
                                        <Key frame="90" value="41.043" />
                                        <Key frame="117" value="48.6" />
                                        <Key frame="141" value="38.4111" />
                                        <Key frame="166" value="48.6" />
                                        <Key frame="191" value="41.043" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="13" value="59.1487" />
                                        <Key frame="40" value="20.3885" />
                                        <Key frame="65" value="38.2305" />
                                        <Key frame="90" value="44.4756" />
                                        <Key frame="117" value="38.2305" />
                                        <Key frame="141" value="20.3885" />
                                        <Key frame="166" value="38.2305" />
                                        <Key frame="191" value="44.4756" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="13" value="0.73" />
                                        <Key frame="40" value="0.3048" />
                                        <Key frame="65" value="0.37" />
                                        <Key frame="90" value="0.306" />
                                        <Key frame="117" value="0.37" />
                                        <Key frame="141" value="0.3048" />
                                        <Key frame="166" value="0.37" />
                                        <Key frame="191" value="0.306" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                                        <Key frame="14" value="-4.74855" />
                                        <Key frame="41" value="25.2225" />
                                        <Key frame="66" value="11.5114" />
                                        <Key frame="91" value="27.73" />
                                        <Key frame="118" value="11.5114" />
                                        <Key frame="142" value="25.2225" />
                                        <Key frame="167" value="11.5114" />
                                        <Key frame="192" value="27.73" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                                        <Key frame="14" value="-6.15001" />
                                        <Key frame="41" value="-10.1051" />
                                        <Key frame="91" value="3.60116" />
                                        <Key frame="142" value="-10.1051" />
                                        <Key frame="192" value="3.60116" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                                        <Key frame="14" value="-10.3688" />
                                        <Key frame="41" value="-8.4352" />
                                        <Key frame="66" value="-10.2809" />
                                        <Key frame="91" value="-8.4352" />
                                        <Key frame="118" value="-10.2809" />
                                        <Key frame="142" value="-8.4352" />
                                        <Key frame="167" value="-10.2809" />
                                        <Key frame="192" value="-8.4352" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                                        <Key frame="14" value="18.6354" />
                                        <Key frame="41" value="-5.18321" />
                                        <Key frame="66" value="6.24271" />
                                        <Key frame="91" value="-5.18802" />
                                        <Key frame="118" value="6.24271" />
                                        <Key frame="142" value="-5.18321" />
                                        <Key frame="167" value="6.24271" />
                                        <Key frame="192" value="-5.18802" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="68.2064" />
                                        <Key frame="40" value="71.4" />
                                        <Key frame="65" value="71.4584" />
                                        <Key frame="90" value="67.9" />
                                        <Key frame="117" value="71.4584" />
                                        <Key frame="141" value="71.4" />
                                        <Key frame="166" value="71.4584" />
                                        <Key frame="191" value="67.9" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="1.84332" />
                                        <Key frame="40" value="5.62267" />
                                        <Key frame="65" value="-2" />
                                        <Key frame="90" value="5.71537" />
                                        <Key frame="117" value="-2" />
                                        <Key frame="141" value="5.62267" />
                                        <Key frame="166" value="-2" />
                                        <Key frame="191" value="5.71537" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="15.906" />
                                        <Key frame="40" value="9.22623" />
                                        <Key frame="65" value="-2.90283" />
                                        <Key frame="90" value="-31.287" />
                                        <Key frame="117" value="-2.90283" />
                                        <Key frame="141" value="9.22623" />
                                        <Key frame="166" value="-2.90283" />
                                        <Key frame="191" value="-31.287" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="Response5" id="5" localization="8" tooltip="This box is empty and should be used to create any box diagram you would like.&#x0A;&#x0A;To edit its diagram, double-click on it." x="693" y="706">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Fear" id="21" localization="8" tooltip="ID : #02C 0001&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Fear" x="431" y="52">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="100">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="FaceLeds1" index="1">
                                        <Diagram scale="100">
                                          <Box name="Light_NeutralAndZenEyes" id="1" localization="8" tooltip="Set A Neutral Animated Gaze&#x0A;*** state: se/Leds/Light_NeutralAndZenEyes/Light_NeutralAndZenEyes.x ***&#x0A;*** ref box in: .//5a_release/Leds/Light_NeutralAndZenEyes/Light_NeutralAndZenEyes.xar ***&#x0A;*** last modification date(svn): 2009-04-17 14:01:23 +0200 ***" x="176" y="93">
                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onLoad(self):
    self.leds = self.session().service("ALLeds")

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );

    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;

    rDuration = 1.0;
    self.leds.fadeRGB( "FaceLeds", 0x00ff00, rDuration, _async=True );

    while( not self.bMustStop ):
      rTime=1.0
      self.leds.fadeRGB( "FaceLedsTop", 0x000000, rTime );
      if( self.bMustStop ):
        break;
      self.leds.fadeRGB( "FaceLedsTop", 0x00ff00, rTime );
    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                          </Box>
                                          <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                      <BehaviorKeyframe name="FaceLeds2" index="6">
                                        <Diagram scale="100">
                                          <Box name="Light_SurprisedEyes" id="1" localization="8" tooltip="Set An Animated Gaze Which Expresses Surprise&#x0A;*** state: se/Leds/Light_SurprisedEyes/Light_SurprisedEyes.x ***&#x0A;*** ref box in: .//5a_release/Leds/Light_SurprisedEyes/Light_SurprisedEyes.xar ***&#x0A;*** last modification date(svn): 2009-04-17 14:01:23 +0200 ***" x="133" y="78">
                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onLoad(self):
    self.leds = self.session().service("ALLeds")

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );

    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;

    rDuration = 0.3;
    self.leds.fadeRGB( "FaceLedsTop", 0x000000, rDuration, _async=True );
    self.leds.fadeRGB( "FaceLedsInternal", 0xffff00, rDuration, _async=True );
    self.leds.fadeRGB( "FaceLedsBottom", 0x000000, rDuration, _async=True );
    self.leds.fadeRGB( "FaceLedsExternal", 0xffff00, rDuration );

    while( not self.bMustStop ):
      rTime=0.2
      self.leds.fadeRGB( "FaceLed7", 0x000000, rTime, _async=True );
      self.leds.fadeRGB( "FaceLed4", 0x000000, rTime );
      if( self.bMustStop ):
        break;
      self.leds.fadeRGB( "FaceLed7", 0xffff00, rTime, _async=True );
      self.leds.fadeRGB( "FaceLed4", 0xffff00, rTime );

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                          </Box>
                                          <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                    <BehaviorLayer name="behavior_layer2">
                                      <BehaviorKeyframe name="Sound" index="1">
                                        <Diagram scale="100">
                                          <Box name="Play Sound" id="4" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg." x="75" y="48">
                                            <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="File path" inherits_from_parent="0" content_type="4" value="/surprise3.ogg" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="5" />
                                            <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                                            <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                                            <Parameter name="Panorama" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                                            <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                                            <Timeline enable="0">
                                              <BehaviorLayer name="behavior_layer1">
                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                  <Diagram>
                                                    <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                                      <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                      <script language="4">
                                                        <content>
                                                          <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.player = self.session().service('ALAudioPlayer')
        self.playerStop = self.session().service('ALAudioPlayer') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.pCall("playFileInLoop",p,self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            else :
               id = self.player.pCall("playFileFromPosition",p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            self.ids.append(id)
            self.player.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                                        </content>
                                                      </script>
                                                      <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                      <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                      <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                      <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                      <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                      <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                      <Parameter name="Panorama" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                      <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                      <Resource name="Audio player" type="Stop on demand" timeout="0" />
                                                    </Box>
                                                    <Box name="Get File Path" id="1" localization="8" tooltip="Use this box to choose a resource file in its parameters. The filepath will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                                      <bitmap>media/images/box/folder.png</bitmap>
                                                      <script language="4">
                                                        <content>
                                                          <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File path"))]]>
                                                        </content>
                                                      </script>
                                                      <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                      <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                      <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                      <Parameter name="File path" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="4" />
                                                    </Box>
                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                  </Diagram>
                                                </BehaviorKeyframe>
                                              </BehaviorLayer>
                                            </Timeline>
                                          </Box>
                                          <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="5" value="6.41369" />
                                        <Key frame="20" value="6.85315" />
                                        <Key frame="25" value="-26.1062" />
                                        <Key frame="33" value="-26.1062" />
                                        <Key frame="38" value="-11.9557" />
                                        <Key frame="48" value="-11.9557" />
                                        <Key frame="52" value="7.90785" />
                                        <Key frame="66" value="7.90785" />
                                        <Key frame="70" value="-26.1062" />
                                        <Key frame="78" value="-26.1062" />
                                        <Key frame="83" value="-0.00240423" />
                                        <Key frame="100" value="0.349163" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="5" value="-30.8524" />
                                        <Key frame="20" value="-31.3797" />
                                        <Key frame="25" value="-29.7098" />
                                        <Key frame="33" value="-29.7098" />
                                        <Key frame="38" value="-37.6201" />
                                        <Key frame="48" value="-37.6201" />
                                        <Key frame="52" value="-31.2919" />
                                        <Key frame="66" value="-31.2919" />
                                        <Key frame="70" value="-29.7098" />
                                        <Key frame="78" value="-29.7098" />
                                        <Key frame="83" value="-31.0282" />
                                        <Key frame="100" value="-12.1315" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="4" value="102.04" />
                                        <Key frame="75" value="99.1395" />
                                        <Key frame="96" value="96.239" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="4" value="8.4352" />
                                        <Key frame="75" value="9.31412" />
                                        <Key frame="96" value="18.0154" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="4" value="-115.844" />
                                        <Key frame="75" value="-119.535" />
                                        <Key frame="96" value="-68.2064" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="4" value="-31.4628" />
                                        <Key frame="75" value="-26.2772" />
                                        <Key frame="96" value="-30.496" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="9" value="-1.93602" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="9" value="0.341458" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="4" value="98.2654" />
                                        <Key frame="75" value="97.2985" />
                                        <Key frame="96" value="98.4411" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="4" value="-16.9655" />
                                        <Key frame="75" value="-13.2741" />
                                        <Key frame="96" value="-10.9889" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="4" value="103.798" />
                                        <Key frame="75" value="111.884" />
                                        <Key frame="96" value="95.2722" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="4" value="29.8856" />
                                        <Key frame="75" value="29.8856" />
                                        <Key frame="96" value="31.5555" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="9" value="0.349163" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="9" value="0.0192993" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="6" value="-10.193" />
                                        <Key frame="12" value="-10.193" />
                                        <Key frame="77" value="-8.69888" />
                                        <Key frame="98" value="-31.2871" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="6" value="1.84813" />
                                        <Key frame="12" value="2.11181" />
                                        <Key frame="77" value="1.145" />
                                        <Key frame="98" value="10.1978" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="6" value="-22.3221" />
                                        <Key frame="12" value="-22.2342" />
                                        <Key frame="77" value="-16.8728" />
                                        <Key frame="98" value="21.2722" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="6" value="44.2071" />
                                        <Key frame="12" value="44.295" />
                                        <Key frame="77" value="62.5765" />
                                        <Key frame="98" value="-2.90283" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="6" value="-17.4929" />
                                        <Key frame="12" value="-17.4929" />
                                        <Key frame="77" value="-36.1259" />
                                        <Key frame="98" value="6.67737" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="6" value="-2.107" />
                                        <Key frame="12" value="-2.107" />
                                        <Key frame="77" value="-0.437054" />
                                        <Key frame="98" value="-5.2711" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="6" value="-0.261271" />
                                        <Key frame="12" value="-0.437054" />
                                        <Key frame="77" value="0.266079" />
                                        <Key frame="98" value="-11.6872" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="6" value="-23.4695" />
                                        <Key frame="12" value="-23.3816" />
                                        <Key frame="77" value="-16.4382" />
                                        <Key frame="98" value="20.74" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="6" value="43.4209" />
                                        <Key frame="12" value="43.333" />
                                        <Key frame="77" value="62.2297" />
                                        <Key frame="98" value="0.617646" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="6" value="-15.906" />
                                        <Key frame="12" value="-15.906" />
                                        <Key frame="77" value="-36.5606" />
                                        <Key frame="98" value="4.22121" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="6" value="0.881321" />
                                        <Key frame="12" value="0.881321" />
                                        <Key frame="77" value="-0.788621" />
                                        <Key frame="98" value="5.97904" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                  <Resource name="Left eye leds" type="Lock" timeout="1" />
                                  <Resource name="Right eye leds" type="Lock" timeout="1" />
                                </Box>
                                <Link inputowner="21" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="21" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="Switch Case" id="6" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="317" y="90">
                        <bitmap>media/images/box/interaction/choice.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                          </content>
                        </script>
                        <pluginContent>
                          <keywords>
                            <keyword>0</keyword>
                            <keyword>1</keyword>
                            <keyword>2</keyword>
                            <keyword>3</keyword>
                            <keyword>4</keyword>
                            <keyword></keyword>
                          </keywords>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" />
                        <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                        <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                        <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                        <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                        <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                        <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
                      </Box>
                      <Box name="Confused" id="20" localization="8" tooltip="ID : #02C 0002&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Confused" x="687" y="84">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="65">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                              <Key frame="25" value="2.72224" />
                              <Key frame="45" value="-0.00240423" />
                              <Key frame="65" value="5.71056" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                              <Key frame="25" value="-30.8524" />
                              <Key frame="45" value="-33.4013" />
                              <Key frame="65" value="-30.4129" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="23" value="69.8715" />
                              <Key frame="43" value="73.7388" />
                              <Key frame="63" value="75.4087" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="23" value="0.498473" />
                              <Key frame="43" value="3.51326" />
                              <Key frame="63" value="2.89802" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="23" value="-28.3914" />
                              <Key frame="43" value="-55.7258" />
                              <Key frame="63" value="-68.7337" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="23" value="-46.4923" />
                              <Key frame="43" value="-67.9379" />
                              <Key frame="63" value="-61.0823" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="43" value="-43" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="43" value="0.58" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="21" value="76.3803" />
                              <Key frame="41" value="73.8315" />
                              <Key frame="61" value="83.148" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="21" value="-0.529755" />
                              <Key frame="41" value="-0.881321" />
                              <Key frame="61" value="-0.969213" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="21" value="44.4708" />
                              <Key frame="41" value="55.1936" />
                              <Key frame="61" value="69.6078" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="21" value="69.8763" />
                              <Key frame="41" value="79.896" />
                              <Key frame="61" value="65.9212" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="41" value="52" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="41" value="0.527273" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="42" value="-27.9472" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="42" value="1.40867" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="42" value="-3.86483" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="42" value="30.2323" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="42" value="-10.9889" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="42" value="0.178188" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="42" value="1.49656" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="42" value="-0.79343" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="42" value="26.8973" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="42" value="-10.0173" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="42" value="-1.84332" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                        <Resource name="Standing" type="Lock" timeout="1" />
                        <Resource name="All motors" type="Lock" timeout="1" />
                      </Box>
                      <Link inputowner="11" indexofinput="4" outputowner="0" indexofoutput="4" />
                      <Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="6" indexofinput="2" outputowner="11" indexofoutput="6" />
                      <Link inputowner="5" indexofinput="2" outputowner="6" indexofoutput="8" />
                      <Link inputowner="4" indexofinput="2" outputowner="6" indexofoutput="7" />
                      <Link inputowner="3" indexofinput="2" outputowner="6" indexofoutput="6" />
                      <Link inputowner="2" indexofinput="2" outputowner="6" indexofoutput="5" />
                      <Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="5" outputowner="3" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="5" outputowner="4" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="5" outputowner="5" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="6" outputowner="11" indexofoutput="6" />
                      <Link inputowner="20" indexofinput="2" outputowner="6" indexofoutput="3" />
                      <Link inputowner="0" indexofinput="5" outputowner="20" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="7" outputowner="0" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="updatePreferences" id="7" localization="8" tooltip="This box is empty and should be used to create any box diagram you would like.&#x0A;&#x0A;To edit its diagram, double-click on it." x="1374" y="52">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Input name="feedback" type="2" type_size="1" nature="1" inner="0" tooltip="" id="4" />
              <Input name="performedResponse" type="2" type_size="1" nature="1" inner="0" tooltip="" id="5" />
              <Input name="userID" type="3" type_size="1" nature="1" inner="0" tooltip="" id="6" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="7" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="updateResponse" id="11" localization="8" tooltip="Testing access to our database through choregraphe" x="857" y="36">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import sqlite3

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.conn = None

    # will add new fae with unique id, default to
    def get_preference(self, user_id):
        result = conn.execute("SELECT preference FROM faces WHERE user_id={}").format(user_id).fetchone()
        return result

    def onInput_userId(self, user_id):
        self.logger.log("test")
        # get a preference from the database given an identity
        preference = self.get_preference(self.user_id)

        # return that preference
        self.preference(preference)

    def onLoad(self):
        # Connect to database
        self.conn = sqlite3.connect('robot_db', check_same_thread=False)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Input name="userId" type="3" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                        <Input name="newResponse" type="2" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="6" />
                      </Box>
                      <Box name="Random Int." id="1" localization="8" tooltip="Generate a random integer between a min number and a max number set as&#x0A;parameters.&#x0A;Note that the min and max numbers are included in the range of possible values." x="423" y="149">
                        <bitmap>media/images/box/box-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import random

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nMin = 0
        self.nIndex = self.nMax - self.nMin
        self.aShuffled = []

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("Max value")
        nMin = self.getParameter("Min value")
        if( nMin > nMax ):
            temp = nMin
            nMin = nMax
            nMax = temp
        # if shuffle
        if( self.getParameter("Shuffle") ):
            self.nIndex += 1
            if( self.nIndex > self.nMax - self.nMin or nMax != self.nMax or nMin != self.nMin ):
                self.nMax = nMax
                self.nMin = nMin
                self.nIndex = 0
                self.aShuffled = []
                for i in range( nMin, nMax + 1 ):
                    self.aShuffled.insert( random.randint(0, len(self.aShuffled)), i )
            self.output_RandomValue( self.aShuffled[self.nIndex] )
        # if not shuffle
        else:
            self.nIndex = self.nMax - self.nMin
            self.output_RandomValue( random.randint( nMin, nMax ) )]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Generate a random integer." id="2" />
                        <Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value obtained." id="3" />
                        <Parameter name="Min value" inherits_from_parent="0" content_type="1" value="0" default_value="0" min="0" max="1000" tooltip="The minimum value you can get." id="4" />
                        <Parameter name="Max value" inherits_from_parent="0" content_type="1" value="4" default_value="10" min="0" max="1000" tooltip="The maximum number you can get." id="5" />
                        <Parameter name="Shuffle" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="When this option is selected the box will give all the numbers between min and&#x0A;max before giving the same number twice." id="6" />
                      </Box>
                      <Box name="If" id="2" localization="8" tooltip="Test a condition and stimulate the then or else outputs depending on the boolean&#x0A;value of the condition.&#x0A;The condition can be set in parameters." x="213" y="163">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onData(self, p):
        param = self.getParameter("Value to compare")
        try:
            p = float(p)
            param = float(param)
        except:
            p = str(p)
            param = str(param)
        operator = self.getParameter("Condition operator")
        if( operator == "<" ):
            self.outputTrueOrFalse( p < param )
        elif( operator == "< or =" ):
            self.outputTrueOrFalse( p <= param )
        elif( operator == "=" ):
            self.outputTrueOrFalse( p == param )
        elif( operator == "> or =" ):
            self.outputTrueOrFalse( p >= param )
        elif( operator == ">" ):
            self.outputTrueOrFalse( p > param )
        elif( operator == "≠" ):
            self.outputTrueOrFalse( p != param )
        else:
            raise Exception( "Operator not known: " + str(operator) )

    def outputTrueOrFalse(self, condition):
        if( condition ):
            self.output_then()
        else:
            self.output_else()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onData" type="0" type_size="1" nature="1" inner="0" tooltip="The data to test." id="2" />
                        <Output name="output_then" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is true." id="3" />
                        <Output name="output_else" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is false." id="4" />
                        <Parameter name="Condition operator" inherits_from_parent="0" content_type="3" value="=" default_value="≠" custom_choice="0" tooltip='Choose the condition operator.&#x0A;&#x0A;For example:&#x0A;If you choose &quot;&gt; or =&quot;, the condition will be: is the input is higher or equal&#x0A;than the parameter?' id="5">
                          <Choice value="&lt;" />
                          <Choice value="&lt; or =" />
                          <Choice value="=" />
                          <Choice value="&gt; or =" />
                          <Choice value="&gt;" />
                          <Choice value="≠" />
                        </Parameter>
                        <Parameter name="Value to compare" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="This is the value which is compared to the input value." id="6" />
                      </Box>
                      <Link inputowner="0" indexofinput="7" outputowner="11" indexofoutput="6" />
                      <Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="11" indexofinput="4" outputowner="0" indexofoutput="6" />
                      <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="3" />
                      <Link inputowner="11" indexofinput="5" outputowner="1" indexofoutput="3" />
                      <Link inputowner="11" indexofinput="5" outputowner="0" indexofoutput="5" />
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Tactile Head" id="9" localization="8" tooltip="Detect touch on head tactile sensor." x="993" y="44">
              <bitmap>media/images/box/sensors/tactileHead.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
            self.onStopped() #~ activate output of the box
        pass]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Input name="FrontTactilTouched" type="0" type_size="1" nature="4" stm_value_name="FrontTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
              <Input name="MiddleTactilTouched" type="0" type_size="1" nature="4" stm_value_name="MiddleTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" />
              <Input name="RearTactilTouched" type="0" type_size="1" nature="4" stm_value_name="RearTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="7" />
              <Output name="frontTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The front tactile head sensor was touched." id="8" />
              <Output name="middleTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The middle tactile head sensor was touched." id="9" />
              <Output name="rearTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The rear tactile head sensor was touched." id="10" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="If &gt; 0" id="1" localization="8" tooltip="Transmit only if value is &gt; 0." x="260" y="17">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Box name="If &gt; 0" id="2" localization="8" tooltip="Transmit only if value is &gt; 0." x="256" y="119">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Box name="If &gt; 0" id="3" localization="8" tooltip="Transmit only if value is &gt; 0." x="261" y="223">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="8" outputowner="1" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="5" />
                      <Link inputowner="0" indexofinput="9" outputowner="2" indexofoutput="4" />
                      <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="6" />
                      <Link inputowner="0" indexofinput="10" outputowner="3" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
              <Resource name="Head-sequence" type="Lock" timeout="0" />
            </Box>
            <Box name="Wait" id="11" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="995" y="165">
              <bitmap>media/images/box/wait.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
              <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
              <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="3" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
              <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
            </Box>
            <Box name="negativeFeedback" id="14" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="1167" y="150">
              <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(0)]]>
                </content>
              </script>
              <pluginContent>
                <number>0</number>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
              <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
            </Box>
            <Box name="positiveFeedback" id="13" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="1162" y="66">
              <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(1)]]>
                </content>
              </script>
              <pluginContent>
                <number>1</number>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
              <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
            </Box>
            <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="4" />
            <Link inputowner="6" indexofinput="2" outputowner="4" indexofoutput="7" />
            <Link inputowner="3" indexofinput="2" outputowner="4" indexofoutput="6" />
            <Link inputowner="3" indexofinput="2" outputowner="6" indexofoutput="4" />
            <Link inputowner="3" indexofinput="4" outputowner="6" indexofoutput="5" />
            <Link inputowner="3" indexofinput="4" outputowner="4" indexofoutput="6" />
            <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
            <Link inputowner="9" indexofinput="2" outputowner="3" indexofoutput="5" />
            <Link inputowner="11" indexofinput="2" outputowner="3" indexofoutput="5" />
            <Link inputowner="14" indexofinput="2" outputowner="11" indexofoutput="4" />
            <Link inputowner="7" indexofinput="4" outputowner="14" indexofoutput="3" />
            <Link inputowner="13" indexofinput="2" outputowner="9" indexofoutput="9" />
            <Link inputowner="7" indexofinput="4" outputowner="13" indexofoutput="3" />
            <Link inputowner="4" indexofinput="2" outputowner="7" indexofoutput="7" />
            <Link inputowner="7" indexofinput="5" outputowner="3" indexofoutput="6" />
            <Link inputowner="7" indexofinput="6" outputowner="3" indexofoutput="7" />
          </Diagram>
        </BehaviorKeyframe>
      </BehaviorLayer>
    </Timeline>
  </Box>
</ChoregrapheProject>
